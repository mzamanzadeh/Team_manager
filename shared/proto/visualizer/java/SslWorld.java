// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: ssl_world.proto

public final class SslWorld {
  private SslWorld() {}
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistry registry) {
  }
  public interface ssl_world_packetOrBuilder
      extends com.google.protobuf.MessageOrBuilder {
    
    // repeated .ssl_world_packet.Ball field_balls = 1;
    java.util.List<SslWorld.ssl_world_packet.Ball> 
        getFieldBallsList();
    SslWorld.ssl_world_packet.Ball getFieldBalls(int index);
    int getFieldBallsCount();
    java.util.List<? extends SslWorld.ssl_world_packet.BallOrBuilder> 
        getFieldBallsOrBuilderList();
    SslWorld.ssl_world_packet.BallOrBuilder getFieldBallsOrBuilder(
        int index);
    
    // required .ssl_world_packet.Team blue_team = 2;
    boolean hasBlueTeam();
    SslWorld.ssl_world_packet.Team getBlueTeam();
    SslWorld.ssl_world_packet.TeamOrBuilder getBlueTeamOrBuilder();
    
    // required .ssl_world_packet.Team yellow_team = 3;
    boolean hasYellowTeam();
    SslWorld.ssl_world_packet.Team getYellowTeam();
    SslWorld.ssl_world_packet.TeamOrBuilder getYellowTeamOrBuilder();
    
    // required string referee_state = 4;
    boolean hasRefereeState();
    String getRefereeState();
    
    // optional string comment = 5;
    boolean hasComment();
    String getComment();
  }
  public static final class ssl_world_packet extends
      com.google.protobuf.GeneratedMessage
      implements ssl_world_packetOrBuilder {
    // Use ssl_world_packet.newBuilder() to construct.
    private ssl_world_packet(Builder builder) {
      super(builder);
    }
    private ssl_world_packet(boolean noInit) {}
    
    private static final ssl_world_packet defaultInstance;
    public static ssl_world_packet getDefaultInstance() {
      return defaultInstance;
    }
    
    public ssl_world_packet getDefaultInstanceForType() {
      return defaultInstance;
    }
    
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return SslWorld.internal_static_ssl_world_packet_descriptor;
    }
    
    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return SslWorld.internal_static_ssl_world_packet_fieldAccessorTable;
    }
    
    public enum Side
        implements com.google.protobuf.ProtocolMessageEnum {
      left(0, -1),
      right(1, 1),
      ;
      
      public static final int left_VALUE = -1;
      public static final int right_VALUE = 1;
      
      
      public final int getNumber() { return value; }
      
      public static Side valueOf(int value) {
        switch (value) {
          case -1: return left;
          case 1: return right;
          default: return null;
        }
      }
      
      public static com.google.protobuf.Internal.EnumLiteMap<Side>
          internalGetValueMap() {
        return internalValueMap;
      }
      private static com.google.protobuf.Internal.EnumLiteMap<Side>
          internalValueMap =
            new com.google.protobuf.Internal.EnumLiteMap<Side>() {
              public Side findValueByNumber(int number) {
                return Side.valueOf(number);
              }
            };
      
      public final com.google.protobuf.Descriptors.EnumValueDescriptor
          getValueDescriptor() {
        return getDescriptor().getValues().get(index);
      }
      public final com.google.protobuf.Descriptors.EnumDescriptor
          getDescriptorForType() {
        return getDescriptor();
      }
      public static final com.google.protobuf.Descriptors.EnumDescriptor
          getDescriptor() {
        return SslWorld.ssl_world_packet.getDescriptor().getEnumTypes().get(0);
      }
      
      private static final Side[] VALUES = {
        left, right, 
      };
      
      public static Side valueOf(
          com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
        if (desc.getType() != getDescriptor()) {
          throw new java.lang.IllegalArgumentException(
            "EnumValueDescriptor is not for this type.");
        }
        return VALUES[desc.getIndex()];
      }
      
      private final int index;
      private final int value;
      
      private Side(int index, int value) {
        this.index = index;
        this.value = value;
      }
      
      // @@protoc_insertion_point(enum_scope:ssl_world_packet.Side)
    }
    
    public interface vector_3dOrBuilder
        extends com.google.protobuf.MessageOrBuilder {
      
      // required float x = 1;
      boolean hasX();
      float getX();
      
      // required float y = 2;
      boolean hasY();
      float getY();
      
      // required float teta = 3;
      boolean hasTeta();
      float getTeta();
    }
    public static final class vector_3d extends
        com.google.protobuf.GeneratedMessage
        implements vector_3dOrBuilder {
      // Use vector_3d.newBuilder() to construct.
      private vector_3d(Builder builder) {
        super(builder);
      }
      private vector_3d(boolean noInit) {}
      
      private static final vector_3d defaultInstance;
      public static vector_3d getDefaultInstance() {
        return defaultInstance;
      }
      
      public vector_3d getDefaultInstanceForType() {
        return defaultInstance;
      }
      
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return SslWorld.internal_static_ssl_world_packet_vector_3d_descriptor;
      }
      
      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return SslWorld.internal_static_ssl_world_packet_vector_3d_fieldAccessorTable;
      }
      
      private int bitField0_;
      // required float x = 1;
      public static final int X_FIELD_NUMBER = 1;
      private float x_;
      public boolean hasX() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      public float getX() {
        return x_;
      }
      
      // required float y = 2;
      public static final int Y_FIELD_NUMBER = 2;
      private float y_;
      public boolean hasY() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      public float getY() {
        return y_;
      }
      
      // required float teta = 3;
      public static final int TETA_FIELD_NUMBER = 3;
      private float teta_;
      public boolean hasTeta() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      public float getTeta() {
        return teta_;
      }
      
      private void initFields() {
        x_ = 0F;
        y_ = 0F;
        teta_ = 0F;
      }
      private byte memoizedIsInitialized = -1;
      public final boolean isInitialized() {
        byte isInitialized = memoizedIsInitialized;
        if (isInitialized != -1) return isInitialized == 1;
        
        if (!hasX()) {
          memoizedIsInitialized = 0;
          return false;
        }
        if (!hasY()) {
          memoizedIsInitialized = 0;
          return false;
        }
        if (!hasTeta()) {
          memoizedIsInitialized = 0;
          return false;
        }
        memoizedIsInitialized = 1;
        return true;
      }
      
      public void writeTo(com.google.protobuf.CodedOutputStream output)
                          throws java.io.IOException {
        getSerializedSize();
        if (((bitField0_ & 0x00000001) == 0x00000001)) {
          output.writeFloat(1, x_);
        }
        if (((bitField0_ & 0x00000002) == 0x00000002)) {
          output.writeFloat(2, y_);
        }
        if (((bitField0_ & 0x00000004) == 0x00000004)) {
          output.writeFloat(3, teta_);
        }
        getUnknownFields().writeTo(output);
      }
      
      private int memoizedSerializedSize = -1;
      public int getSerializedSize() {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
      
        size = 0;
        if (((bitField0_ & 0x00000001) == 0x00000001)) {
          size += com.google.protobuf.CodedOutputStream
            .computeFloatSize(1, x_);
        }
        if (((bitField0_ & 0x00000002) == 0x00000002)) {
          size += com.google.protobuf.CodedOutputStream
            .computeFloatSize(2, y_);
        }
        if (((bitField0_ & 0x00000004) == 0x00000004)) {
          size += com.google.protobuf.CodedOutputStream
            .computeFloatSize(3, teta_);
        }
        size += getUnknownFields().getSerializedSize();
        memoizedSerializedSize = size;
        return size;
      }
      
      private static final long serialVersionUID = 0L;
      @java.lang.Override
      protected java.lang.Object writeReplace()
          throws java.io.ObjectStreamException {
        return super.writeReplace();
      }
      
      public static SslWorld.ssl_world_packet.vector_3d parseFrom(
          com.google.protobuf.ByteString data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return newBuilder().mergeFrom(data).buildParsed();
      }
      public static SslWorld.ssl_world_packet.vector_3d parseFrom(
          com.google.protobuf.ByteString data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return newBuilder().mergeFrom(data, extensionRegistry)
                 .buildParsed();
      }
      public static SslWorld.ssl_world_packet.vector_3d parseFrom(byte[] data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return newBuilder().mergeFrom(data).buildParsed();
      }
      public static SslWorld.ssl_world_packet.vector_3d parseFrom(
          byte[] data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return newBuilder().mergeFrom(data, extensionRegistry)
                 .buildParsed();
      }
      public static SslWorld.ssl_world_packet.vector_3d parseFrom(java.io.InputStream input)
          throws java.io.IOException {
        return newBuilder().mergeFrom(input).buildParsed();
      }
      public static SslWorld.ssl_world_packet.vector_3d parseFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return newBuilder().mergeFrom(input, extensionRegistry)
                 .buildParsed();
      }
      public static SslWorld.ssl_world_packet.vector_3d parseDelimitedFrom(java.io.InputStream input)
          throws java.io.IOException {
        Builder builder = newBuilder();
        if (builder.mergeDelimitedFrom(input)) {
          return builder.buildParsed();
        } else {
          return null;
        }
      }
      public static SslWorld.ssl_world_packet.vector_3d parseDelimitedFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        Builder builder = newBuilder();
        if (builder.mergeDelimitedFrom(input, extensionRegistry)) {
          return builder.buildParsed();
        } else {
          return null;
        }
      }
      public static SslWorld.ssl_world_packet.vector_3d parseFrom(
          com.google.protobuf.CodedInputStream input)
          throws java.io.IOException {
        return newBuilder().mergeFrom(input).buildParsed();
      }
      public static SslWorld.ssl_world_packet.vector_3d parseFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return newBuilder().mergeFrom(input, extensionRegistry)
                 .buildParsed();
      }
      
      public static Builder newBuilder() { return Builder.create(); }
      public Builder newBuilderForType() { return newBuilder(); }
      public static Builder newBuilder(SslWorld.ssl_world_packet.vector_3d prototype) {
        return newBuilder().mergeFrom(prototype);
      }
      public Builder toBuilder() { return newBuilder(this); }
      
      @java.lang.Override
      protected Builder newBuilderForType(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        Builder builder = new Builder(parent);
        return builder;
      }
      public static final class Builder extends
          com.google.protobuf.GeneratedMessage.Builder<Builder>
         implements SslWorld.ssl_world_packet.vector_3dOrBuilder {
        public static final com.google.protobuf.Descriptors.Descriptor
            getDescriptor() {
          return SslWorld.internal_static_ssl_world_packet_vector_3d_descriptor;
        }
        
        protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
            internalGetFieldAccessorTable() {
          return SslWorld.internal_static_ssl_world_packet_vector_3d_fieldAccessorTable;
        }
        
        // Construct using SslWorld.ssl_world_packet.vector_3d.newBuilder()
        private Builder() {
          maybeForceBuilderInitialization();
        }
        
        private Builder(BuilderParent parent) {
          super(parent);
          maybeForceBuilderInitialization();
        }
        private void maybeForceBuilderInitialization() {
          if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
          }
        }
        private static Builder create() {
          return new Builder();
        }
        
        public Builder clear() {
          super.clear();
          x_ = 0F;
          bitField0_ = (bitField0_ & ~0x00000001);
          y_ = 0F;
          bitField0_ = (bitField0_ & ~0x00000002);
          teta_ = 0F;
          bitField0_ = (bitField0_ & ~0x00000004);
          return this;
        }
        
        public Builder clone() {
          return create().mergeFrom(buildPartial());
        }
        
        public com.google.protobuf.Descriptors.Descriptor
            getDescriptorForType() {
          return SslWorld.ssl_world_packet.vector_3d.getDescriptor();
        }
        
        public SslWorld.ssl_world_packet.vector_3d getDefaultInstanceForType() {
          return SslWorld.ssl_world_packet.vector_3d.getDefaultInstance();
        }
        
        public SslWorld.ssl_world_packet.vector_3d build() {
          SslWorld.ssl_world_packet.vector_3d result = buildPartial();
          if (!result.isInitialized()) {
            throw newUninitializedMessageException(result);
          }
          return result;
        }
        
        private SslWorld.ssl_world_packet.vector_3d buildParsed()
            throws com.google.protobuf.InvalidProtocolBufferException {
          SslWorld.ssl_world_packet.vector_3d result = buildPartial();
          if (!result.isInitialized()) {
            throw newUninitializedMessageException(
              result).asInvalidProtocolBufferException();
          }
          return result;
        }
        
        public SslWorld.ssl_world_packet.vector_3d buildPartial() {
          SslWorld.ssl_world_packet.vector_3d result = new SslWorld.ssl_world_packet.vector_3d(this);
          int from_bitField0_ = bitField0_;
          int to_bitField0_ = 0;
          if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
            to_bitField0_ |= 0x00000001;
          }
          result.x_ = x_;
          if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
            to_bitField0_ |= 0x00000002;
          }
          result.y_ = y_;
          if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
            to_bitField0_ |= 0x00000004;
          }
          result.teta_ = teta_;
          result.bitField0_ = to_bitField0_;
          onBuilt();
          return result;
        }
        
        public Builder mergeFrom(com.google.protobuf.Message other) {
          if (other instanceof SslWorld.ssl_world_packet.vector_3d) {
            return mergeFrom((SslWorld.ssl_world_packet.vector_3d)other);
          } else {
            super.mergeFrom(other);
            return this;
          }
        }
        
        public Builder mergeFrom(SslWorld.ssl_world_packet.vector_3d other) {
          if (other == SslWorld.ssl_world_packet.vector_3d.getDefaultInstance()) return this;
          if (other.hasX()) {
            setX(other.getX());
          }
          if (other.hasY()) {
            setY(other.getY());
          }
          if (other.hasTeta()) {
            setTeta(other.getTeta());
          }
          this.mergeUnknownFields(other.getUnknownFields());
          return this;
        }
        
        public final boolean isInitialized() {
          if (!hasX()) {
            
            return false;
          }
          if (!hasY()) {
            
            return false;
          }
          if (!hasTeta()) {
            
            return false;
          }
          return true;
        }
        
        public Builder mergeFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
          com.google.protobuf.UnknownFieldSet.Builder unknownFields =
            com.google.protobuf.UnknownFieldSet.newBuilder(
              this.getUnknownFields());
          while (true) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                this.setUnknownFields(unknownFields.build());
                onChanged();
                return this;
              default: {
                if (!parseUnknownField(input, unknownFields,
                                       extensionRegistry, tag)) {
                  this.setUnknownFields(unknownFields.build());
                  onChanged();
                  return this;
                }
                break;
              }
              case 13: {
                bitField0_ |= 0x00000001;
                x_ = input.readFloat();
                break;
              }
              case 21: {
                bitField0_ |= 0x00000002;
                y_ = input.readFloat();
                break;
              }
              case 29: {
                bitField0_ |= 0x00000004;
                teta_ = input.readFloat();
                break;
              }
            }
          }
        }
        
        private int bitField0_;
        
        // required float x = 1;
        private float x_ ;
        public boolean hasX() {
          return ((bitField0_ & 0x00000001) == 0x00000001);
        }
        public float getX() {
          return x_;
        }
        public Builder setX(float value) {
          bitField0_ |= 0x00000001;
          x_ = value;
          onChanged();
          return this;
        }
        public Builder clearX() {
          bitField0_ = (bitField0_ & ~0x00000001);
          x_ = 0F;
          onChanged();
          return this;
        }
        
        // required float y = 2;
        private float y_ ;
        public boolean hasY() {
          return ((bitField0_ & 0x00000002) == 0x00000002);
        }
        public float getY() {
          return y_;
        }
        public Builder setY(float value) {
          bitField0_ |= 0x00000002;
          y_ = value;
          onChanged();
          return this;
        }
        public Builder clearY() {
          bitField0_ = (bitField0_ & ~0x00000002);
          y_ = 0F;
          onChanged();
          return this;
        }
        
        // required float teta = 3;
        private float teta_ ;
        public boolean hasTeta() {
          return ((bitField0_ & 0x00000004) == 0x00000004);
        }
        public float getTeta() {
          return teta_;
        }
        public Builder setTeta(float value) {
          bitField0_ |= 0x00000004;
          teta_ = value;
          onChanged();
          return this;
        }
        public Builder clearTeta() {
          bitField0_ = (bitField0_ & ~0x00000004);
          teta_ = 0F;
          onChanged();
          return this;
        }
        
        // @@protoc_insertion_point(builder_scope:ssl_world_packet.vector_3d)
      }
      
      static {
        defaultInstance = new vector_3d(true);
        defaultInstance.initFields();
      }
      
      // @@protoc_insertion_point(class_scope:ssl_world_packet.vector_3d)
    }
    
    public interface BallOrBuilder
        extends com.google.protobuf.MessageOrBuilder {
      
      // required uint32 id = 1;
      boolean hasId();
      int getId();
      
      // required .ssl_world_packet.vector_3d position = 2;
      boolean hasPosition();
      SslWorld.ssl_world_packet.vector_3d getPosition();
      SslWorld.ssl_world_packet.vector_3dOrBuilder getPositionOrBuilder();
      
      // required .ssl_world_packet.vector_3d velocity = 3;
      boolean hasVelocity();
      SslWorld.ssl_world_packet.vector_3d getVelocity();
      SslWorld.ssl_world_packet.vector_3dOrBuilder getVelocityOrBuilder();
      
      // optional .ssl_world_packet.vector_3d displacement = 4;
      boolean hasDisplacement();
      SslWorld.ssl_world_packet.vector_3d getDisplacement();
      SslWorld.ssl_world_packet.vector_3dOrBuilder getDisplacementOrBuilder();
      
      // optional .ssl_world_packet.vector_3d velocity_raw = 5;
      boolean hasVelocityRaw();
      SslWorld.ssl_world_packet.vector_3d getVelocityRaw();
      SslWorld.ssl_world_packet.vector_3dOrBuilder getVelocityRawOrBuilder();
    }
    public static final class Ball extends
        com.google.protobuf.GeneratedMessage
        implements BallOrBuilder {
      // Use Ball.newBuilder() to construct.
      private Ball(Builder builder) {
        super(builder);
      }
      private Ball(boolean noInit) {}
      
      private static final Ball defaultInstance;
      public static Ball getDefaultInstance() {
        return defaultInstance;
      }
      
      public Ball getDefaultInstanceForType() {
        return defaultInstance;
      }
      
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return SslWorld.internal_static_ssl_world_packet_Ball_descriptor;
      }
      
      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return SslWorld.internal_static_ssl_world_packet_Ball_fieldAccessorTable;
      }
      
      private int bitField0_;
      // required uint32 id = 1;
      public static final int ID_FIELD_NUMBER = 1;
      private int id_;
      public boolean hasId() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      public int getId() {
        return id_;
      }
      
      // required .ssl_world_packet.vector_3d position = 2;
      public static final int POSITION_FIELD_NUMBER = 2;
      private SslWorld.ssl_world_packet.vector_3d position_;
      public boolean hasPosition() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      public SslWorld.ssl_world_packet.vector_3d getPosition() {
        return position_;
      }
      public SslWorld.ssl_world_packet.vector_3dOrBuilder getPositionOrBuilder() {
        return position_;
      }
      
      // required .ssl_world_packet.vector_3d velocity = 3;
      public static final int VELOCITY_FIELD_NUMBER = 3;
      private SslWorld.ssl_world_packet.vector_3d velocity_;
      public boolean hasVelocity() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      public SslWorld.ssl_world_packet.vector_3d getVelocity() {
        return velocity_;
      }
      public SslWorld.ssl_world_packet.vector_3dOrBuilder getVelocityOrBuilder() {
        return velocity_;
      }
      
      // optional .ssl_world_packet.vector_3d displacement = 4;
      public static final int DISPLACEMENT_FIELD_NUMBER = 4;
      private SslWorld.ssl_world_packet.vector_3d displacement_;
      public boolean hasDisplacement() {
        return ((bitField0_ & 0x00000008) == 0x00000008);
      }
      public SslWorld.ssl_world_packet.vector_3d getDisplacement() {
        return displacement_;
      }
      public SslWorld.ssl_world_packet.vector_3dOrBuilder getDisplacementOrBuilder() {
        return displacement_;
      }
      
      // optional .ssl_world_packet.vector_3d velocity_raw = 5;
      public static final int VELOCITY_RAW_FIELD_NUMBER = 5;
      private SslWorld.ssl_world_packet.vector_3d velocityRaw_;
      public boolean hasVelocityRaw() {
        return ((bitField0_ & 0x00000010) == 0x00000010);
      }
      public SslWorld.ssl_world_packet.vector_3d getVelocityRaw() {
        return velocityRaw_;
      }
      public SslWorld.ssl_world_packet.vector_3dOrBuilder getVelocityRawOrBuilder() {
        return velocityRaw_;
      }
      
      private void initFields() {
        id_ = 0;
        position_ = SslWorld.ssl_world_packet.vector_3d.getDefaultInstance();
        velocity_ = SslWorld.ssl_world_packet.vector_3d.getDefaultInstance();
        displacement_ = SslWorld.ssl_world_packet.vector_3d.getDefaultInstance();
        velocityRaw_ = SslWorld.ssl_world_packet.vector_3d.getDefaultInstance();
      }
      private byte memoizedIsInitialized = -1;
      public final boolean isInitialized() {
        byte isInitialized = memoizedIsInitialized;
        if (isInitialized != -1) return isInitialized == 1;
        
        if (!hasId()) {
          memoizedIsInitialized = 0;
          return false;
        }
        if (!hasPosition()) {
          memoizedIsInitialized = 0;
          return false;
        }
        if (!hasVelocity()) {
          memoizedIsInitialized = 0;
          return false;
        }
        if (!getPosition().isInitialized()) {
          memoizedIsInitialized = 0;
          return false;
        }
        if (!getVelocity().isInitialized()) {
          memoizedIsInitialized = 0;
          return false;
        }
        if (hasDisplacement()) {
          if (!getDisplacement().isInitialized()) {
            memoizedIsInitialized = 0;
            return false;
          }
        }
        if (hasVelocityRaw()) {
          if (!getVelocityRaw().isInitialized()) {
            memoizedIsInitialized = 0;
            return false;
          }
        }
        memoizedIsInitialized = 1;
        return true;
      }
      
      public void writeTo(com.google.protobuf.CodedOutputStream output)
                          throws java.io.IOException {
        getSerializedSize();
        if (((bitField0_ & 0x00000001) == 0x00000001)) {
          output.writeUInt32(1, id_);
        }
        if (((bitField0_ & 0x00000002) == 0x00000002)) {
          output.writeMessage(2, position_);
        }
        if (((bitField0_ & 0x00000004) == 0x00000004)) {
          output.writeMessage(3, velocity_);
        }
        if (((bitField0_ & 0x00000008) == 0x00000008)) {
          output.writeMessage(4, displacement_);
        }
        if (((bitField0_ & 0x00000010) == 0x00000010)) {
          output.writeMessage(5, velocityRaw_);
        }
        getUnknownFields().writeTo(output);
      }
      
      private int memoizedSerializedSize = -1;
      public int getSerializedSize() {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
      
        size = 0;
        if (((bitField0_ & 0x00000001) == 0x00000001)) {
          size += com.google.protobuf.CodedOutputStream
            .computeUInt32Size(1, id_);
        }
        if (((bitField0_ & 0x00000002) == 0x00000002)) {
          size += com.google.protobuf.CodedOutputStream
            .computeMessageSize(2, position_);
        }
        if (((bitField0_ & 0x00000004) == 0x00000004)) {
          size += com.google.protobuf.CodedOutputStream
            .computeMessageSize(3, velocity_);
        }
        if (((bitField0_ & 0x00000008) == 0x00000008)) {
          size += com.google.protobuf.CodedOutputStream
            .computeMessageSize(4, displacement_);
        }
        if (((bitField0_ & 0x00000010) == 0x00000010)) {
          size += com.google.protobuf.CodedOutputStream
            .computeMessageSize(5, velocityRaw_);
        }
        size += getUnknownFields().getSerializedSize();
        memoizedSerializedSize = size;
        return size;
      }
      
      private static final long serialVersionUID = 0L;
      @java.lang.Override
      protected java.lang.Object writeReplace()
          throws java.io.ObjectStreamException {
        return super.writeReplace();
      }
      
      public static SslWorld.ssl_world_packet.Ball parseFrom(
          com.google.protobuf.ByteString data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return newBuilder().mergeFrom(data).buildParsed();
      }
      public static SslWorld.ssl_world_packet.Ball parseFrom(
          com.google.protobuf.ByteString data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return newBuilder().mergeFrom(data, extensionRegistry)
                 .buildParsed();
      }
      public static SslWorld.ssl_world_packet.Ball parseFrom(byte[] data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return newBuilder().mergeFrom(data).buildParsed();
      }
      public static SslWorld.ssl_world_packet.Ball parseFrom(
          byte[] data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return newBuilder().mergeFrom(data, extensionRegistry)
                 .buildParsed();
      }
      public static SslWorld.ssl_world_packet.Ball parseFrom(java.io.InputStream input)
          throws java.io.IOException {
        return newBuilder().mergeFrom(input).buildParsed();
      }
      public static SslWorld.ssl_world_packet.Ball parseFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return newBuilder().mergeFrom(input, extensionRegistry)
                 .buildParsed();
      }
      public static SslWorld.ssl_world_packet.Ball parseDelimitedFrom(java.io.InputStream input)
          throws java.io.IOException {
        Builder builder = newBuilder();
        if (builder.mergeDelimitedFrom(input)) {
          return builder.buildParsed();
        } else {
          return null;
        }
      }
      public static SslWorld.ssl_world_packet.Ball parseDelimitedFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        Builder builder = newBuilder();
        if (builder.mergeDelimitedFrom(input, extensionRegistry)) {
          return builder.buildParsed();
        } else {
          return null;
        }
      }
      public static SslWorld.ssl_world_packet.Ball parseFrom(
          com.google.protobuf.CodedInputStream input)
          throws java.io.IOException {
        return newBuilder().mergeFrom(input).buildParsed();
      }
      public static SslWorld.ssl_world_packet.Ball parseFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return newBuilder().mergeFrom(input, extensionRegistry)
                 .buildParsed();
      }
      
      public static Builder newBuilder() { return Builder.create(); }
      public Builder newBuilderForType() { return newBuilder(); }
      public static Builder newBuilder(SslWorld.ssl_world_packet.Ball prototype) {
        return newBuilder().mergeFrom(prototype);
      }
      public Builder toBuilder() { return newBuilder(this); }
      
      @java.lang.Override
      protected Builder newBuilderForType(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        Builder builder = new Builder(parent);
        return builder;
      }
      public static final class Builder extends
          com.google.protobuf.GeneratedMessage.Builder<Builder>
         implements SslWorld.ssl_world_packet.BallOrBuilder {
        public static final com.google.protobuf.Descriptors.Descriptor
            getDescriptor() {
          return SslWorld.internal_static_ssl_world_packet_Ball_descriptor;
        }
        
        protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
            internalGetFieldAccessorTable() {
          return SslWorld.internal_static_ssl_world_packet_Ball_fieldAccessorTable;
        }
        
        // Construct using SslWorld.ssl_world_packet.Ball.newBuilder()
        private Builder() {
          maybeForceBuilderInitialization();
        }
        
        private Builder(BuilderParent parent) {
          super(parent);
          maybeForceBuilderInitialization();
        }
        private void maybeForceBuilderInitialization() {
          if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
            getPositionFieldBuilder();
            getVelocityFieldBuilder();
            getDisplacementFieldBuilder();
            getVelocityRawFieldBuilder();
          }
        }
        private static Builder create() {
          return new Builder();
        }
        
        public Builder clear() {
          super.clear();
          id_ = 0;
          bitField0_ = (bitField0_ & ~0x00000001);
          if (positionBuilder_ == null) {
            position_ = SslWorld.ssl_world_packet.vector_3d.getDefaultInstance();
          } else {
            positionBuilder_.clear();
          }
          bitField0_ = (bitField0_ & ~0x00000002);
          if (velocityBuilder_ == null) {
            velocity_ = SslWorld.ssl_world_packet.vector_3d.getDefaultInstance();
          } else {
            velocityBuilder_.clear();
          }
          bitField0_ = (bitField0_ & ~0x00000004);
          if (displacementBuilder_ == null) {
            displacement_ = SslWorld.ssl_world_packet.vector_3d.getDefaultInstance();
          } else {
            displacementBuilder_.clear();
          }
          bitField0_ = (bitField0_ & ~0x00000008);
          if (velocityRawBuilder_ == null) {
            velocityRaw_ = SslWorld.ssl_world_packet.vector_3d.getDefaultInstance();
          } else {
            velocityRawBuilder_.clear();
          }
          bitField0_ = (bitField0_ & ~0x00000010);
          return this;
        }
        
        public Builder clone() {
          return create().mergeFrom(buildPartial());
        }
        
        public com.google.protobuf.Descriptors.Descriptor
            getDescriptorForType() {
          return SslWorld.ssl_world_packet.Ball.getDescriptor();
        }
        
        public SslWorld.ssl_world_packet.Ball getDefaultInstanceForType() {
          return SslWorld.ssl_world_packet.Ball.getDefaultInstance();
        }
        
        public SslWorld.ssl_world_packet.Ball build() {
          SslWorld.ssl_world_packet.Ball result = buildPartial();
          if (!result.isInitialized()) {
            throw newUninitializedMessageException(result);
          }
          return result;
        }
        
        private SslWorld.ssl_world_packet.Ball buildParsed()
            throws com.google.protobuf.InvalidProtocolBufferException {
          SslWorld.ssl_world_packet.Ball result = buildPartial();
          if (!result.isInitialized()) {
            throw newUninitializedMessageException(
              result).asInvalidProtocolBufferException();
          }
          return result;
        }
        
        public SslWorld.ssl_world_packet.Ball buildPartial() {
          SslWorld.ssl_world_packet.Ball result = new SslWorld.ssl_world_packet.Ball(this);
          int from_bitField0_ = bitField0_;
          int to_bitField0_ = 0;
          if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
            to_bitField0_ |= 0x00000001;
          }
          result.id_ = id_;
          if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
            to_bitField0_ |= 0x00000002;
          }
          if (positionBuilder_ == null) {
            result.position_ = position_;
          } else {
            result.position_ = positionBuilder_.build();
          }
          if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
            to_bitField0_ |= 0x00000004;
          }
          if (velocityBuilder_ == null) {
            result.velocity_ = velocity_;
          } else {
            result.velocity_ = velocityBuilder_.build();
          }
          if (((from_bitField0_ & 0x00000008) == 0x00000008)) {
            to_bitField0_ |= 0x00000008;
          }
          if (displacementBuilder_ == null) {
            result.displacement_ = displacement_;
          } else {
            result.displacement_ = displacementBuilder_.build();
          }
          if (((from_bitField0_ & 0x00000010) == 0x00000010)) {
            to_bitField0_ |= 0x00000010;
          }
          if (velocityRawBuilder_ == null) {
            result.velocityRaw_ = velocityRaw_;
          } else {
            result.velocityRaw_ = velocityRawBuilder_.build();
          }
          result.bitField0_ = to_bitField0_;
          onBuilt();
          return result;
        }
        
        public Builder mergeFrom(com.google.protobuf.Message other) {
          if (other instanceof SslWorld.ssl_world_packet.Ball) {
            return mergeFrom((SslWorld.ssl_world_packet.Ball)other);
          } else {
            super.mergeFrom(other);
            return this;
          }
        }
        
        public Builder mergeFrom(SslWorld.ssl_world_packet.Ball other) {
          if (other == SslWorld.ssl_world_packet.Ball.getDefaultInstance()) return this;
          if (other.hasId()) {
            setId(other.getId());
          }
          if (other.hasPosition()) {
            mergePosition(other.getPosition());
          }
          if (other.hasVelocity()) {
            mergeVelocity(other.getVelocity());
          }
          if (other.hasDisplacement()) {
            mergeDisplacement(other.getDisplacement());
          }
          if (other.hasVelocityRaw()) {
            mergeVelocityRaw(other.getVelocityRaw());
          }
          this.mergeUnknownFields(other.getUnknownFields());
          return this;
        }
        
        public final boolean isInitialized() {
          if (!hasId()) {
            
            return false;
          }
          if (!hasPosition()) {
            
            return false;
          }
          if (!hasVelocity()) {
            
            return false;
          }
          if (!getPosition().isInitialized()) {
            
            return false;
          }
          if (!getVelocity().isInitialized()) {
            
            return false;
          }
          if (hasDisplacement()) {
            if (!getDisplacement().isInitialized()) {
              
              return false;
            }
          }
          if (hasVelocityRaw()) {
            if (!getVelocityRaw().isInitialized()) {
              
              return false;
            }
          }
          return true;
        }
        
        public Builder mergeFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
          com.google.protobuf.UnknownFieldSet.Builder unknownFields =
            com.google.protobuf.UnknownFieldSet.newBuilder(
              this.getUnknownFields());
          while (true) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                this.setUnknownFields(unknownFields.build());
                onChanged();
                return this;
              default: {
                if (!parseUnknownField(input, unknownFields,
                                       extensionRegistry, tag)) {
                  this.setUnknownFields(unknownFields.build());
                  onChanged();
                  return this;
                }
                break;
              }
              case 8: {
                bitField0_ |= 0x00000001;
                id_ = input.readUInt32();
                break;
              }
              case 18: {
                SslWorld.ssl_world_packet.vector_3d.Builder subBuilder = SslWorld.ssl_world_packet.vector_3d.newBuilder();
                if (hasPosition()) {
                  subBuilder.mergeFrom(getPosition());
                }
                input.readMessage(subBuilder, extensionRegistry);
                setPosition(subBuilder.buildPartial());
                break;
              }
              case 26: {
                SslWorld.ssl_world_packet.vector_3d.Builder subBuilder = SslWorld.ssl_world_packet.vector_3d.newBuilder();
                if (hasVelocity()) {
                  subBuilder.mergeFrom(getVelocity());
                }
                input.readMessage(subBuilder, extensionRegistry);
                setVelocity(subBuilder.buildPartial());
                break;
              }
              case 34: {
                SslWorld.ssl_world_packet.vector_3d.Builder subBuilder = SslWorld.ssl_world_packet.vector_3d.newBuilder();
                if (hasDisplacement()) {
                  subBuilder.mergeFrom(getDisplacement());
                }
                input.readMessage(subBuilder, extensionRegistry);
                setDisplacement(subBuilder.buildPartial());
                break;
              }
              case 42: {
                SslWorld.ssl_world_packet.vector_3d.Builder subBuilder = SslWorld.ssl_world_packet.vector_3d.newBuilder();
                if (hasVelocityRaw()) {
                  subBuilder.mergeFrom(getVelocityRaw());
                }
                input.readMessage(subBuilder, extensionRegistry);
                setVelocityRaw(subBuilder.buildPartial());
                break;
              }
            }
          }
        }
        
        private int bitField0_;
        
        // required uint32 id = 1;
        private int id_ ;
        public boolean hasId() {
          return ((bitField0_ & 0x00000001) == 0x00000001);
        }
        public int getId() {
          return id_;
        }
        public Builder setId(int value) {
          bitField0_ |= 0x00000001;
          id_ = value;
          onChanged();
          return this;
        }
        public Builder clearId() {
          bitField0_ = (bitField0_ & ~0x00000001);
          id_ = 0;
          onChanged();
          return this;
        }
        
        // required .ssl_world_packet.vector_3d position = 2;
        private SslWorld.ssl_world_packet.vector_3d position_ = SslWorld.ssl_world_packet.vector_3d.getDefaultInstance();
        private com.google.protobuf.SingleFieldBuilder<
            SslWorld.ssl_world_packet.vector_3d, SslWorld.ssl_world_packet.vector_3d.Builder, SslWorld.ssl_world_packet.vector_3dOrBuilder> positionBuilder_;
        public boolean hasPosition() {
          return ((bitField0_ & 0x00000002) == 0x00000002);
        }
        public SslWorld.ssl_world_packet.vector_3d getPosition() {
          if (positionBuilder_ == null) {
            return position_;
          } else {
            return positionBuilder_.getMessage();
          }
        }
        public Builder setPosition(SslWorld.ssl_world_packet.vector_3d value) {
          if (positionBuilder_ == null) {
            if (value == null) {
              throw new NullPointerException();
            }
            position_ = value;
            onChanged();
          } else {
            positionBuilder_.setMessage(value);
          }
          bitField0_ |= 0x00000002;
          return this;
        }
        public Builder setPosition(
            SslWorld.ssl_world_packet.vector_3d.Builder builderForValue) {
          if (positionBuilder_ == null) {
            position_ = builderForValue.build();
            onChanged();
          } else {
            positionBuilder_.setMessage(builderForValue.build());
          }
          bitField0_ |= 0x00000002;
          return this;
        }
        public Builder mergePosition(SslWorld.ssl_world_packet.vector_3d value) {
          if (positionBuilder_ == null) {
            if (((bitField0_ & 0x00000002) == 0x00000002) &&
                position_ != SslWorld.ssl_world_packet.vector_3d.getDefaultInstance()) {
              position_ =
                SslWorld.ssl_world_packet.vector_3d.newBuilder(position_).mergeFrom(value).buildPartial();
            } else {
              position_ = value;
            }
            onChanged();
          } else {
            positionBuilder_.mergeFrom(value);
          }
          bitField0_ |= 0x00000002;
          return this;
        }
        public Builder clearPosition() {
          if (positionBuilder_ == null) {
            position_ = SslWorld.ssl_world_packet.vector_3d.getDefaultInstance();
            onChanged();
          } else {
            positionBuilder_.clear();
          }
          bitField0_ = (bitField0_ & ~0x00000002);
          return this;
        }
        public SslWorld.ssl_world_packet.vector_3d.Builder getPositionBuilder() {
          bitField0_ |= 0x00000002;
          onChanged();
          return getPositionFieldBuilder().getBuilder();
        }
        public SslWorld.ssl_world_packet.vector_3dOrBuilder getPositionOrBuilder() {
          if (positionBuilder_ != null) {
            return positionBuilder_.getMessageOrBuilder();
          } else {
            return position_;
          }
        }
        private com.google.protobuf.SingleFieldBuilder<
            SslWorld.ssl_world_packet.vector_3d, SslWorld.ssl_world_packet.vector_3d.Builder, SslWorld.ssl_world_packet.vector_3dOrBuilder> 
            getPositionFieldBuilder() {
          if (positionBuilder_ == null) {
            positionBuilder_ = new com.google.protobuf.SingleFieldBuilder<
                SslWorld.ssl_world_packet.vector_3d, SslWorld.ssl_world_packet.vector_3d.Builder, SslWorld.ssl_world_packet.vector_3dOrBuilder>(
                    position_,
                    getParentForChildren(),
                    isClean());
            position_ = null;
          }
          return positionBuilder_;
        }
        
        // required .ssl_world_packet.vector_3d velocity = 3;
        private SslWorld.ssl_world_packet.vector_3d velocity_ = SslWorld.ssl_world_packet.vector_3d.getDefaultInstance();
        private com.google.protobuf.SingleFieldBuilder<
            SslWorld.ssl_world_packet.vector_3d, SslWorld.ssl_world_packet.vector_3d.Builder, SslWorld.ssl_world_packet.vector_3dOrBuilder> velocityBuilder_;
        public boolean hasVelocity() {
          return ((bitField0_ & 0x00000004) == 0x00000004);
        }
        public SslWorld.ssl_world_packet.vector_3d getVelocity() {
          if (velocityBuilder_ == null) {
            return velocity_;
          } else {
            return velocityBuilder_.getMessage();
          }
        }
        public Builder setVelocity(SslWorld.ssl_world_packet.vector_3d value) {
          if (velocityBuilder_ == null) {
            if (value == null) {
              throw new NullPointerException();
            }
            velocity_ = value;
            onChanged();
          } else {
            velocityBuilder_.setMessage(value);
          }
          bitField0_ |= 0x00000004;
          return this;
        }
        public Builder setVelocity(
            SslWorld.ssl_world_packet.vector_3d.Builder builderForValue) {
          if (velocityBuilder_ == null) {
            velocity_ = builderForValue.build();
            onChanged();
          } else {
            velocityBuilder_.setMessage(builderForValue.build());
          }
          bitField0_ |= 0x00000004;
          return this;
        }
        public Builder mergeVelocity(SslWorld.ssl_world_packet.vector_3d value) {
          if (velocityBuilder_ == null) {
            if (((bitField0_ & 0x00000004) == 0x00000004) &&
                velocity_ != SslWorld.ssl_world_packet.vector_3d.getDefaultInstance()) {
              velocity_ =
                SslWorld.ssl_world_packet.vector_3d.newBuilder(velocity_).mergeFrom(value).buildPartial();
            } else {
              velocity_ = value;
            }
            onChanged();
          } else {
            velocityBuilder_.mergeFrom(value);
          }
          bitField0_ |= 0x00000004;
          return this;
        }
        public Builder clearVelocity() {
          if (velocityBuilder_ == null) {
            velocity_ = SslWorld.ssl_world_packet.vector_3d.getDefaultInstance();
            onChanged();
          } else {
            velocityBuilder_.clear();
          }
          bitField0_ = (bitField0_ & ~0x00000004);
          return this;
        }
        public SslWorld.ssl_world_packet.vector_3d.Builder getVelocityBuilder() {
          bitField0_ |= 0x00000004;
          onChanged();
          return getVelocityFieldBuilder().getBuilder();
        }
        public SslWorld.ssl_world_packet.vector_3dOrBuilder getVelocityOrBuilder() {
          if (velocityBuilder_ != null) {
            return velocityBuilder_.getMessageOrBuilder();
          } else {
            return velocity_;
          }
        }
        private com.google.protobuf.SingleFieldBuilder<
            SslWorld.ssl_world_packet.vector_3d, SslWorld.ssl_world_packet.vector_3d.Builder, SslWorld.ssl_world_packet.vector_3dOrBuilder> 
            getVelocityFieldBuilder() {
          if (velocityBuilder_ == null) {
            velocityBuilder_ = new com.google.protobuf.SingleFieldBuilder<
                SslWorld.ssl_world_packet.vector_3d, SslWorld.ssl_world_packet.vector_3d.Builder, SslWorld.ssl_world_packet.vector_3dOrBuilder>(
                    velocity_,
                    getParentForChildren(),
                    isClean());
            velocity_ = null;
          }
          return velocityBuilder_;
        }
        
        // optional .ssl_world_packet.vector_3d displacement = 4;
        private SslWorld.ssl_world_packet.vector_3d displacement_ = SslWorld.ssl_world_packet.vector_3d.getDefaultInstance();
        private com.google.protobuf.SingleFieldBuilder<
            SslWorld.ssl_world_packet.vector_3d, SslWorld.ssl_world_packet.vector_3d.Builder, SslWorld.ssl_world_packet.vector_3dOrBuilder> displacementBuilder_;
        public boolean hasDisplacement() {
          return ((bitField0_ & 0x00000008) == 0x00000008);
        }
        public SslWorld.ssl_world_packet.vector_3d getDisplacement() {
          if (displacementBuilder_ == null) {
            return displacement_;
          } else {
            return displacementBuilder_.getMessage();
          }
        }
        public Builder setDisplacement(SslWorld.ssl_world_packet.vector_3d value) {
          if (displacementBuilder_ == null) {
            if (value == null) {
              throw new NullPointerException();
            }
            displacement_ = value;
            onChanged();
          } else {
            displacementBuilder_.setMessage(value);
          }
          bitField0_ |= 0x00000008;
          return this;
        }
        public Builder setDisplacement(
            SslWorld.ssl_world_packet.vector_3d.Builder builderForValue) {
          if (displacementBuilder_ == null) {
            displacement_ = builderForValue.build();
            onChanged();
          } else {
            displacementBuilder_.setMessage(builderForValue.build());
          }
          bitField0_ |= 0x00000008;
          return this;
        }
        public Builder mergeDisplacement(SslWorld.ssl_world_packet.vector_3d value) {
          if (displacementBuilder_ == null) {
            if (((bitField0_ & 0x00000008) == 0x00000008) &&
                displacement_ != SslWorld.ssl_world_packet.vector_3d.getDefaultInstance()) {
              displacement_ =
                SslWorld.ssl_world_packet.vector_3d.newBuilder(displacement_).mergeFrom(value).buildPartial();
            } else {
              displacement_ = value;
            }
            onChanged();
          } else {
            displacementBuilder_.mergeFrom(value);
          }
          bitField0_ |= 0x00000008;
          return this;
        }
        public Builder clearDisplacement() {
          if (displacementBuilder_ == null) {
            displacement_ = SslWorld.ssl_world_packet.vector_3d.getDefaultInstance();
            onChanged();
          } else {
            displacementBuilder_.clear();
          }
          bitField0_ = (bitField0_ & ~0x00000008);
          return this;
        }
        public SslWorld.ssl_world_packet.vector_3d.Builder getDisplacementBuilder() {
          bitField0_ |= 0x00000008;
          onChanged();
          return getDisplacementFieldBuilder().getBuilder();
        }
        public SslWorld.ssl_world_packet.vector_3dOrBuilder getDisplacementOrBuilder() {
          if (displacementBuilder_ != null) {
            return displacementBuilder_.getMessageOrBuilder();
          } else {
            return displacement_;
          }
        }
        private com.google.protobuf.SingleFieldBuilder<
            SslWorld.ssl_world_packet.vector_3d, SslWorld.ssl_world_packet.vector_3d.Builder, SslWorld.ssl_world_packet.vector_3dOrBuilder> 
            getDisplacementFieldBuilder() {
          if (displacementBuilder_ == null) {
            displacementBuilder_ = new com.google.protobuf.SingleFieldBuilder<
                SslWorld.ssl_world_packet.vector_3d, SslWorld.ssl_world_packet.vector_3d.Builder, SslWorld.ssl_world_packet.vector_3dOrBuilder>(
                    displacement_,
                    getParentForChildren(),
                    isClean());
            displacement_ = null;
          }
          return displacementBuilder_;
        }
        
        // optional .ssl_world_packet.vector_3d velocity_raw = 5;
        private SslWorld.ssl_world_packet.vector_3d velocityRaw_ = SslWorld.ssl_world_packet.vector_3d.getDefaultInstance();
        private com.google.protobuf.SingleFieldBuilder<
            SslWorld.ssl_world_packet.vector_3d, SslWorld.ssl_world_packet.vector_3d.Builder, SslWorld.ssl_world_packet.vector_3dOrBuilder> velocityRawBuilder_;
        public boolean hasVelocityRaw() {
          return ((bitField0_ & 0x00000010) == 0x00000010);
        }
        public SslWorld.ssl_world_packet.vector_3d getVelocityRaw() {
          if (velocityRawBuilder_ == null) {
            return velocityRaw_;
          } else {
            return velocityRawBuilder_.getMessage();
          }
        }
        public Builder setVelocityRaw(SslWorld.ssl_world_packet.vector_3d value) {
          if (velocityRawBuilder_ == null) {
            if (value == null) {
              throw new NullPointerException();
            }
            velocityRaw_ = value;
            onChanged();
          } else {
            velocityRawBuilder_.setMessage(value);
          }
          bitField0_ |= 0x00000010;
          return this;
        }
        public Builder setVelocityRaw(
            SslWorld.ssl_world_packet.vector_3d.Builder builderForValue) {
          if (velocityRawBuilder_ == null) {
            velocityRaw_ = builderForValue.build();
            onChanged();
          } else {
            velocityRawBuilder_.setMessage(builderForValue.build());
          }
          bitField0_ |= 0x00000010;
          return this;
        }
        public Builder mergeVelocityRaw(SslWorld.ssl_world_packet.vector_3d value) {
          if (velocityRawBuilder_ == null) {
            if (((bitField0_ & 0x00000010) == 0x00000010) &&
                velocityRaw_ != SslWorld.ssl_world_packet.vector_3d.getDefaultInstance()) {
              velocityRaw_ =
                SslWorld.ssl_world_packet.vector_3d.newBuilder(velocityRaw_).mergeFrom(value).buildPartial();
            } else {
              velocityRaw_ = value;
            }
            onChanged();
          } else {
            velocityRawBuilder_.mergeFrom(value);
          }
          bitField0_ |= 0x00000010;
          return this;
        }
        public Builder clearVelocityRaw() {
          if (velocityRawBuilder_ == null) {
            velocityRaw_ = SslWorld.ssl_world_packet.vector_3d.getDefaultInstance();
            onChanged();
          } else {
            velocityRawBuilder_.clear();
          }
          bitField0_ = (bitField0_ & ~0x00000010);
          return this;
        }
        public SslWorld.ssl_world_packet.vector_3d.Builder getVelocityRawBuilder() {
          bitField0_ |= 0x00000010;
          onChanged();
          return getVelocityRawFieldBuilder().getBuilder();
        }
        public SslWorld.ssl_world_packet.vector_3dOrBuilder getVelocityRawOrBuilder() {
          if (velocityRawBuilder_ != null) {
            return velocityRawBuilder_.getMessageOrBuilder();
          } else {
            return velocityRaw_;
          }
        }
        private com.google.protobuf.SingleFieldBuilder<
            SslWorld.ssl_world_packet.vector_3d, SslWorld.ssl_world_packet.vector_3d.Builder, SslWorld.ssl_world_packet.vector_3dOrBuilder> 
            getVelocityRawFieldBuilder() {
          if (velocityRawBuilder_ == null) {
            velocityRawBuilder_ = new com.google.protobuf.SingleFieldBuilder<
                SslWorld.ssl_world_packet.vector_3d, SslWorld.ssl_world_packet.vector_3d.Builder, SslWorld.ssl_world_packet.vector_3dOrBuilder>(
                    velocityRaw_,
                    getParentForChildren(),
                    isClean());
            velocityRaw_ = null;
          }
          return velocityRawBuilder_;
        }
        
        // @@protoc_insertion_point(builder_scope:ssl_world_packet.Ball)
      }
      
      static {
        defaultInstance = new Ball(true);
        defaultInstance.initFields();
      }
      
      // @@protoc_insertion_point(class_scope:ssl_world_packet.Ball)
    }
    
    public interface RobotOrBuilder
        extends com.google.protobuf.MessageOrBuilder {
      
      // required uint32 id = 1;
      boolean hasId();
      int getId();
      
      // required .ssl_world_packet.vector_3d position = 2;
      boolean hasPosition();
      SslWorld.ssl_world_packet.vector_3d getPosition();
      SslWorld.ssl_world_packet.vector_3dOrBuilder getPositionOrBuilder();
      
      // required .ssl_world_packet.vector_3d velocity = 3;
      boolean hasVelocity();
      SslWorld.ssl_world_packet.vector_3d getVelocity();
      SslWorld.ssl_world_packet.vector_3dOrBuilder getVelocityOrBuilder();
    }
    public static final class Robot extends
        com.google.protobuf.GeneratedMessage
        implements RobotOrBuilder {
      // Use Robot.newBuilder() to construct.
      private Robot(Builder builder) {
        super(builder);
      }
      private Robot(boolean noInit) {}
      
      private static final Robot defaultInstance;
      public static Robot getDefaultInstance() {
        return defaultInstance;
      }
      
      public Robot getDefaultInstanceForType() {
        return defaultInstance;
      }
      
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return SslWorld.internal_static_ssl_world_packet_Robot_descriptor;
      }
      
      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return SslWorld.internal_static_ssl_world_packet_Robot_fieldAccessorTable;
      }
      
      private int bitField0_;
      // required uint32 id = 1;
      public static final int ID_FIELD_NUMBER = 1;
      private int id_;
      public boolean hasId() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      public int getId() {
        return id_;
      }
      
      // required .ssl_world_packet.vector_3d position = 2;
      public static final int POSITION_FIELD_NUMBER = 2;
      private SslWorld.ssl_world_packet.vector_3d position_;
      public boolean hasPosition() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      public SslWorld.ssl_world_packet.vector_3d getPosition() {
        return position_;
      }
      public SslWorld.ssl_world_packet.vector_3dOrBuilder getPositionOrBuilder() {
        return position_;
      }
      
      // required .ssl_world_packet.vector_3d velocity = 3;
      public static final int VELOCITY_FIELD_NUMBER = 3;
      private SslWorld.ssl_world_packet.vector_3d velocity_;
      public boolean hasVelocity() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      public SslWorld.ssl_world_packet.vector_3d getVelocity() {
        return velocity_;
      }
      public SslWorld.ssl_world_packet.vector_3dOrBuilder getVelocityOrBuilder() {
        return velocity_;
      }
      
      private void initFields() {
        id_ = 0;
        position_ = SslWorld.ssl_world_packet.vector_3d.getDefaultInstance();
        velocity_ = SslWorld.ssl_world_packet.vector_3d.getDefaultInstance();
      }
      private byte memoizedIsInitialized = -1;
      public final boolean isInitialized() {
        byte isInitialized = memoizedIsInitialized;
        if (isInitialized != -1) return isInitialized == 1;
        
        if (!hasId()) {
          memoizedIsInitialized = 0;
          return false;
        }
        if (!hasPosition()) {
          memoizedIsInitialized = 0;
          return false;
        }
        if (!hasVelocity()) {
          memoizedIsInitialized = 0;
          return false;
        }
        if (!getPosition().isInitialized()) {
          memoizedIsInitialized = 0;
          return false;
        }
        if (!getVelocity().isInitialized()) {
          memoizedIsInitialized = 0;
          return false;
        }
        memoizedIsInitialized = 1;
        return true;
      }
      
      public void writeTo(com.google.protobuf.CodedOutputStream output)
                          throws java.io.IOException {
        getSerializedSize();
        if (((bitField0_ & 0x00000001) == 0x00000001)) {
          output.writeUInt32(1, id_);
        }
        if (((bitField0_ & 0x00000002) == 0x00000002)) {
          output.writeMessage(2, position_);
        }
        if (((bitField0_ & 0x00000004) == 0x00000004)) {
          output.writeMessage(3, velocity_);
        }
        getUnknownFields().writeTo(output);
      }
      
      private int memoizedSerializedSize = -1;
      public int getSerializedSize() {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
      
        size = 0;
        if (((bitField0_ & 0x00000001) == 0x00000001)) {
          size += com.google.protobuf.CodedOutputStream
            .computeUInt32Size(1, id_);
        }
        if (((bitField0_ & 0x00000002) == 0x00000002)) {
          size += com.google.protobuf.CodedOutputStream
            .computeMessageSize(2, position_);
        }
        if (((bitField0_ & 0x00000004) == 0x00000004)) {
          size += com.google.protobuf.CodedOutputStream
            .computeMessageSize(3, velocity_);
        }
        size += getUnknownFields().getSerializedSize();
        memoizedSerializedSize = size;
        return size;
      }
      
      private static final long serialVersionUID = 0L;
      @java.lang.Override
      protected java.lang.Object writeReplace()
          throws java.io.ObjectStreamException {
        return super.writeReplace();
      }
      
      public static SslWorld.ssl_world_packet.Robot parseFrom(
          com.google.protobuf.ByteString data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return newBuilder().mergeFrom(data).buildParsed();
      }
      public static SslWorld.ssl_world_packet.Robot parseFrom(
          com.google.protobuf.ByteString data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return newBuilder().mergeFrom(data, extensionRegistry)
                 .buildParsed();
      }
      public static SslWorld.ssl_world_packet.Robot parseFrom(byte[] data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return newBuilder().mergeFrom(data).buildParsed();
      }
      public static SslWorld.ssl_world_packet.Robot parseFrom(
          byte[] data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return newBuilder().mergeFrom(data, extensionRegistry)
                 .buildParsed();
      }
      public static SslWorld.ssl_world_packet.Robot parseFrom(java.io.InputStream input)
          throws java.io.IOException {
        return newBuilder().mergeFrom(input).buildParsed();
      }
      public static SslWorld.ssl_world_packet.Robot parseFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return newBuilder().mergeFrom(input, extensionRegistry)
                 .buildParsed();
      }
      public static SslWorld.ssl_world_packet.Robot parseDelimitedFrom(java.io.InputStream input)
          throws java.io.IOException {
        Builder builder = newBuilder();
        if (builder.mergeDelimitedFrom(input)) {
          return builder.buildParsed();
        } else {
          return null;
        }
      }
      public static SslWorld.ssl_world_packet.Robot parseDelimitedFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        Builder builder = newBuilder();
        if (builder.mergeDelimitedFrom(input, extensionRegistry)) {
          return builder.buildParsed();
        } else {
          return null;
        }
      }
      public static SslWorld.ssl_world_packet.Robot parseFrom(
          com.google.protobuf.CodedInputStream input)
          throws java.io.IOException {
        return newBuilder().mergeFrom(input).buildParsed();
      }
      public static SslWorld.ssl_world_packet.Robot parseFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return newBuilder().mergeFrom(input, extensionRegistry)
                 .buildParsed();
      }
      
      public static Builder newBuilder() { return Builder.create(); }
      public Builder newBuilderForType() { return newBuilder(); }
      public static Builder newBuilder(SslWorld.ssl_world_packet.Robot prototype) {
        return newBuilder().mergeFrom(prototype);
      }
      public Builder toBuilder() { return newBuilder(this); }
      
      @java.lang.Override
      protected Builder newBuilderForType(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        Builder builder = new Builder(parent);
        return builder;
      }
      public static final class Builder extends
          com.google.protobuf.GeneratedMessage.Builder<Builder>
         implements SslWorld.ssl_world_packet.RobotOrBuilder {
        public static final com.google.protobuf.Descriptors.Descriptor
            getDescriptor() {
          return SslWorld.internal_static_ssl_world_packet_Robot_descriptor;
        }
        
        protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
            internalGetFieldAccessorTable() {
          return SslWorld.internal_static_ssl_world_packet_Robot_fieldAccessorTable;
        }
        
        // Construct using SslWorld.ssl_world_packet.Robot.newBuilder()
        private Builder() {
          maybeForceBuilderInitialization();
        }
        
        private Builder(BuilderParent parent) {
          super(parent);
          maybeForceBuilderInitialization();
        }
        private void maybeForceBuilderInitialization() {
          if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
            getPositionFieldBuilder();
            getVelocityFieldBuilder();
          }
        }
        private static Builder create() {
          return new Builder();
        }
        
        public Builder clear() {
          super.clear();
          id_ = 0;
          bitField0_ = (bitField0_ & ~0x00000001);
          if (positionBuilder_ == null) {
            position_ = SslWorld.ssl_world_packet.vector_3d.getDefaultInstance();
          } else {
            positionBuilder_.clear();
          }
          bitField0_ = (bitField0_ & ~0x00000002);
          if (velocityBuilder_ == null) {
            velocity_ = SslWorld.ssl_world_packet.vector_3d.getDefaultInstance();
          } else {
            velocityBuilder_.clear();
          }
          bitField0_ = (bitField0_ & ~0x00000004);
          return this;
        }
        
        public Builder clone() {
          return create().mergeFrom(buildPartial());
        }
        
        public com.google.protobuf.Descriptors.Descriptor
            getDescriptorForType() {
          return SslWorld.ssl_world_packet.Robot.getDescriptor();
        }
        
        public SslWorld.ssl_world_packet.Robot getDefaultInstanceForType() {
          return SslWorld.ssl_world_packet.Robot.getDefaultInstance();
        }
        
        public SslWorld.ssl_world_packet.Robot build() {
          SslWorld.ssl_world_packet.Robot result = buildPartial();
          if (!result.isInitialized()) {
            throw newUninitializedMessageException(result);
          }
          return result;
        }
        
        private SslWorld.ssl_world_packet.Robot buildParsed()
            throws com.google.protobuf.InvalidProtocolBufferException {
          SslWorld.ssl_world_packet.Robot result = buildPartial();
          if (!result.isInitialized()) {
            throw newUninitializedMessageException(
              result).asInvalidProtocolBufferException();
          }
          return result;
        }
        
        public SslWorld.ssl_world_packet.Robot buildPartial() {
          SslWorld.ssl_world_packet.Robot result = new SslWorld.ssl_world_packet.Robot(this);
          int from_bitField0_ = bitField0_;
          int to_bitField0_ = 0;
          if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
            to_bitField0_ |= 0x00000001;
          }
          result.id_ = id_;
          if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
            to_bitField0_ |= 0x00000002;
          }
          if (positionBuilder_ == null) {
            result.position_ = position_;
          } else {
            result.position_ = positionBuilder_.build();
          }
          if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
            to_bitField0_ |= 0x00000004;
          }
          if (velocityBuilder_ == null) {
            result.velocity_ = velocity_;
          } else {
            result.velocity_ = velocityBuilder_.build();
          }
          result.bitField0_ = to_bitField0_;
          onBuilt();
          return result;
        }
        
        public Builder mergeFrom(com.google.protobuf.Message other) {
          if (other instanceof SslWorld.ssl_world_packet.Robot) {
            return mergeFrom((SslWorld.ssl_world_packet.Robot)other);
          } else {
            super.mergeFrom(other);
            return this;
          }
        }
        
        public Builder mergeFrom(SslWorld.ssl_world_packet.Robot other) {
          if (other == SslWorld.ssl_world_packet.Robot.getDefaultInstance()) return this;
          if (other.hasId()) {
            setId(other.getId());
          }
          if (other.hasPosition()) {
            mergePosition(other.getPosition());
          }
          if (other.hasVelocity()) {
            mergeVelocity(other.getVelocity());
          }
          this.mergeUnknownFields(other.getUnknownFields());
          return this;
        }
        
        public final boolean isInitialized() {
          if (!hasId()) {
            
            return false;
          }
          if (!hasPosition()) {
            
            return false;
          }
          if (!hasVelocity()) {
            
            return false;
          }
          if (!getPosition().isInitialized()) {
            
            return false;
          }
          if (!getVelocity().isInitialized()) {
            
            return false;
          }
          return true;
        }
        
        public Builder mergeFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
          com.google.protobuf.UnknownFieldSet.Builder unknownFields =
            com.google.protobuf.UnknownFieldSet.newBuilder(
              this.getUnknownFields());
          while (true) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                this.setUnknownFields(unknownFields.build());
                onChanged();
                return this;
              default: {
                if (!parseUnknownField(input, unknownFields,
                                       extensionRegistry, tag)) {
                  this.setUnknownFields(unknownFields.build());
                  onChanged();
                  return this;
                }
                break;
              }
              case 8: {
                bitField0_ |= 0x00000001;
                id_ = input.readUInt32();
                break;
              }
              case 18: {
                SslWorld.ssl_world_packet.vector_3d.Builder subBuilder = SslWorld.ssl_world_packet.vector_3d.newBuilder();
                if (hasPosition()) {
                  subBuilder.mergeFrom(getPosition());
                }
                input.readMessage(subBuilder, extensionRegistry);
                setPosition(subBuilder.buildPartial());
                break;
              }
              case 26: {
                SslWorld.ssl_world_packet.vector_3d.Builder subBuilder = SslWorld.ssl_world_packet.vector_3d.newBuilder();
                if (hasVelocity()) {
                  subBuilder.mergeFrom(getVelocity());
                }
                input.readMessage(subBuilder, extensionRegistry);
                setVelocity(subBuilder.buildPartial());
                break;
              }
            }
          }
        }
        
        private int bitField0_;
        
        // required uint32 id = 1;
        private int id_ ;
        public boolean hasId() {
          return ((bitField0_ & 0x00000001) == 0x00000001);
        }
        public int getId() {
          return id_;
        }
        public Builder setId(int value) {
          bitField0_ |= 0x00000001;
          id_ = value;
          onChanged();
          return this;
        }
        public Builder clearId() {
          bitField0_ = (bitField0_ & ~0x00000001);
          id_ = 0;
          onChanged();
          return this;
        }
        
        // required .ssl_world_packet.vector_3d position = 2;
        private SslWorld.ssl_world_packet.vector_3d position_ = SslWorld.ssl_world_packet.vector_3d.getDefaultInstance();
        private com.google.protobuf.SingleFieldBuilder<
            SslWorld.ssl_world_packet.vector_3d, SslWorld.ssl_world_packet.vector_3d.Builder, SslWorld.ssl_world_packet.vector_3dOrBuilder> positionBuilder_;
        public boolean hasPosition() {
          return ((bitField0_ & 0x00000002) == 0x00000002);
        }
        public SslWorld.ssl_world_packet.vector_3d getPosition() {
          if (positionBuilder_ == null) {
            return position_;
          } else {
            return positionBuilder_.getMessage();
          }
        }
        public Builder setPosition(SslWorld.ssl_world_packet.vector_3d value) {
          if (positionBuilder_ == null) {
            if (value == null) {
              throw new NullPointerException();
            }
            position_ = value;
            onChanged();
          } else {
            positionBuilder_.setMessage(value);
          }
          bitField0_ |= 0x00000002;
          return this;
        }
        public Builder setPosition(
            SslWorld.ssl_world_packet.vector_3d.Builder builderForValue) {
          if (positionBuilder_ == null) {
            position_ = builderForValue.build();
            onChanged();
          } else {
            positionBuilder_.setMessage(builderForValue.build());
          }
          bitField0_ |= 0x00000002;
          return this;
        }
        public Builder mergePosition(SslWorld.ssl_world_packet.vector_3d value) {
          if (positionBuilder_ == null) {
            if (((bitField0_ & 0x00000002) == 0x00000002) &&
                position_ != SslWorld.ssl_world_packet.vector_3d.getDefaultInstance()) {
              position_ =
                SslWorld.ssl_world_packet.vector_3d.newBuilder(position_).mergeFrom(value).buildPartial();
            } else {
              position_ = value;
            }
            onChanged();
          } else {
            positionBuilder_.mergeFrom(value);
          }
          bitField0_ |= 0x00000002;
          return this;
        }
        public Builder clearPosition() {
          if (positionBuilder_ == null) {
            position_ = SslWorld.ssl_world_packet.vector_3d.getDefaultInstance();
            onChanged();
          } else {
            positionBuilder_.clear();
          }
          bitField0_ = (bitField0_ & ~0x00000002);
          return this;
        }
        public SslWorld.ssl_world_packet.vector_3d.Builder getPositionBuilder() {
          bitField0_ |= 0x00000002;
          onChanged();
          return getPositionFieldBuilder().getBuilder();
        }
        public SslWorld.ssl_world_packet.vector_3dOrBuilder getPositionOrBuilder() {
          if (positionBuilder_ != null) {
            return positionBuilder_.getMessageOrBuilder();
          } else {
            return position_;
          }
        }
        private com.google.protobuf.SingleFieldBuilder<
            SslWorld.ssl_world_packet.vector_3d, SslWorld.ssl_world_packet.vector_3d.Builder, SslWorld.ssl_world_packet.vector_3dOrBuilder> 
            getPositionFieldBuilder() {
          if (positionBuilder_ == null) {
            positionBuilder_ = new com.google.protobuf.SingleFieldBuilder<
                SslWorld.ssl_world_packet.vector_3d, SslWorld.ssl_world_packet.vector_3d.Builder, SslWorld.ssl_world_packet.vector_3dOrBuilder>(
                    position_,
                    getParentForChildren(),
                    isClean());
            position_ = null;
          }
          return positionBuilder_;
        }
        
        // required .ssl_world_packet.vector_3d velocity = 3;
        private SslWorld.ssl_world_packet.vector_3d velocity_ = SslWorld.ssl_world_packet.vector_3d.getDefaultInstance();
        private com.google.protobuf.SingleFieldBuilder<
            SslWorld.ssl_world_packet.vector_3d, SslWorld.ssl_world_packet.vector_3d.Builder, SslWorld.ssl_world_packet.vector_3dOrBuilder> velocityBuilder_;
        public boolean hasVelocity() {
          return ((bitField0_ & 0x00000004) == 0x00000004);
        }
        public SslWorld.ssl_world_packet.vector_3d getVelocity() {
          if (velocityBuilder_ == null) {
            return velocity_;
          } else {
            return velocityBuilder_.getMessage();
          }
        }
        public Builder setVelocity(SslWorld.ssl_world_packet.vector_3d value) {
          if (velocityBuilder_ == null) {
            if (value == null) {
              throw new NullPointerException();
            }
            velocity_ = value;
            onChanged();
          } else {
            velocityBuilder_.setMessage(value);
          }
          bitField0_ |= 0x00000004;
          return this;
        }
        public Builder setVelocity(
            SslWorld.ssl_world_packet.vector_3d.Builder builderForValue) {
          if (velocityBuilder_ == null) {
            velocity_ = builderForValue.build();
            onChanged();
          } else {
            velocityBuilder_.setMessage(builderForValue.build());
          }
          bitField0_ |= 0x00000004;
          return this;
        }
        public Builder mergeVelocity(SslWorld.ssl_world_packet.vector_3d value) {
          if (velocityBuilder_ == null) {
            if (((bitField0_ & 0x00000004) == 0x00000004) &&
                velocity_ != SslWorld.ssl_world_packet.vector_3d.getDefaultInstance()) {
              velocity_ =
                SslWorld.ssl_world_packet.vector_3d.newBuilder(velocity_).mergeFrom(value).buildPartial();
            } else {
              velocity_ = value;
            }
            onChanged();
          } else {
            velocityBuilder_.mergeFrom(value);
          }
          bitField0_ |= 0x00000004;
          return this;
        }
        public Builder clearVelocity() {
          if (velocityBuilder_ == null) {
            velocity_ = SslWorld.ssl_world_packet.vector_3d.getDefaultInstance();
            onChanged();
          } else {
            velocityBuilder_.clear();
          }
          bitField0_ = (bitField0_ & ~0x00000004);
          return this;
        }
        public SslWorld.ssl_world_packet.vector_3d.Builder getVelocityBuilder() {
          bitField0_ |= 0x00000004;
          onChanged();
          return getVelocityFieldBuilder().getBuilder();
        }
        public SslWorld.ssl_world_packet.vector_3dOrBuilder getVelocityOrBuilder() {
          if (velocityBuilder_ != null) {
            return velocityBuilder_.getMessageOrBuilder();
          } else {
            return velocity_;
          }
        }
        private com.google.protobuf.SingleFieldBuilder<
            SslWorld.ssl_world_packet.vector_3d, SslWorld.ssl_world_packet.vector_3d.Builder, SslWorld.ssl_world_packet.vector_3dOrBuilder> 
            getVelocityFieldBuilder() {
          if (velocityBuilder_ == null) {
            velocityBuilder_ = new com.google.protobuf.SingleFieldBuilder<
                SslWorld.ssl_world_packet.vector_3d, SslWorld.ssl_world_packet.vector_3d.Builder, SslWorld.ssl_world_packet.vector_3dOrBuilder>(
                    velocity_,
                    getParentForChildren(),
                    isClean());
            velocity_ = null;
          }
          return velocityBuilder_;
        }
        
        // @@protoc_insertion_point(builder_scope:ssl_world_packet.Robot)
      }
      
      static {
        defaultInstance = new Robot(true);
        defaultInstance.initFields();
      }
      
      // @@protoc_insertion_point(class_scope:ssl_world_packet.Robot)
    }
    
    public interface TeamOrBuilder
        extends com.google.protobuf.MessageOrBuilder {
      
      // repeated .ssl_world_packet.Robot robots = 1;
      java.util.List<SslWorld.ssl_world_packet.Robot> 
          getRobotsList();
      SslWorld.ssl_world_packet.Robot getRobots(int index);
      int getRobotsCount();
      java.util.List<? extends SslWorld.ssl_world_packet.RobotOrBuilder> 
          getRobotsOrBuilderList();
      SslWorld.ssl_world_packet.RobotOrBuilder getRobotsOrBuilder(
          int index);
      
      // required .ssl_world_packet.Side side = 2;
      boolean hasSide();
      SslWorld.ssl_world_packet.Side getSide();
    }
    public static final class Team extends
        com.google.protobuf.GeneratedMessage
        implements TeamOrBuilder {
      // Use Team.newBuilder() to construct.
      private Team(Builder builder) {
        super(builder);
      }
      private Team(boolean noInit) {}
      
      private static final Team defaultInstance;
      public static Team getDefaultInstance() {
        return defaultInstance;
      }
      
      public Team getDefaultInstanceForType() {
        return defaultInstance;
      }
      
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return SslWorld.internal_static_ssl_world_packet_Team_descriptor;
      }
      
      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return SslWorld.internal_static_ssl_world_packet_Team_fieldAccessorTable;
      }
      
      private int bitField0_;
      // repeated .ssl_world_packet.Robot robots = 1;
      public static final int ROBOTS_FIELD_NUMBER = 1;
      private java.util.List<SslWorld.ssl_world_packet.Robot> robots_;
      public java.util.List<SslWorld.ssl_world_packet.Robot> getRobotsList() {
        return robots_;
      }
      public java.util.List<? extends SslWorld.ssl_world_packet.RobotOrBuilder> 
          getRobotsOrBuilderList() {
        return robots_;
      }
      public int getRobotsCount() {
        return robots_.size();
      }
      public SslWorld.ssl_world_packet.Robot getRobots(int index) {
        return robots_.get(index);
      }
      public SslWorld.ssl_world_packet.RobotOrBuilder getRobotsOrBuilder(
          int index) {
        return robots_.get(index);
      }
      
      // required .ssl_world_packet.Side side = 2;
      public static final int SIDE_FIELD_NUMBER = 2;
      private SslWorld.ssl_world_packet.Side side_;
      public boolean hasSide() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      public SslWorld.ssl_world_packet.Side getSide() {
        return side_;
      }
      
      private void initFields() {
        robots_ = java.util.Collections.emptyList();
        side_ = SslWorld.ssl_world_packet.Side.left;
      }
      private byte memoizedIsInitialized = -1;
      public final boolean isInitialized() {
        byte isInitialized = memoizedIsInitialized;
        if (isInitialized != -1) return isInitialized == 1;
        
        if (!hasSide()) {
          memoizedIsInitialized = 0;
          return false;
        }
        for (int i = 0; i < getRobotsCount(); i++) {
          if (!getRobots(i).isInitialized()) {
            memoizedIsInitialized = 0;
            return false;
          }
        }
        memoizedIsInitialized = 1;
        return true;
      }
      
      public void writeTo(com.google.protobuf.CodedOutputStream output)
                          throws java.io.IOException {
        getSerializedSize();
        for (int i = 0; i < robots_.size(); i++) {
          output.writeMessage(1, robots_.get(i));
        }
        if (((bitField0_ & 0x00000001) == 0x00000001)) {
          output.writeEnum(2, side_.getNumber());
        }
        getUnknownFields().writeTo(output);
      }
      
      private int memoizedSerializedSize = -1;
      public int getSerializedSize() {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
      
        size = 0;
        for (int i = 0; i < robots_.size(); i++) {
          size += com.google.protobuf.CodedOutputStream
            .computeMessageSize(1, robots_.get(i));
        }
        if (((bitField0_ & 0x00000001) == 0x00000001)) {
          size += com.google.protobuf.CodedOutputStream
            .computeEnumSize(2, side_.getNumber());
        }
        size += getUnknownFields().getSerializedSize();
        memoizedSerializedSize = size;
        return size;
      }
      
      private static final long serialVersionUID = 0L;
      @java.lang.Override
      protected java.lang.Object writeReplace()
          throws java.io.ObjectStreamException {
        return super.writeReplace();
      }
      
      public static SslWorld.ssl_world_packet.Team parseFrom(
          com.google.protobuf.ByteString data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return newBuilder().mergeFrom(data).buildParsed();
      }
      public static SslWorld.ssl_world_packet.Team parseFrom(
          com.google.protobuf.ByteString data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return newBuilder().mergeFrom(data, extensionRegistry)
                 .buildParsed();
      }
      public static SslWorld.ssl_world_packet.Team parseFrom(byte[] data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return newBuilder().mergeFrom(data).buildParsed();
      }
      public static SslWorld.ssl_world_packet.Team parseFrom(
          byte[] data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return newBuilder().mergeFrom(data, extensionRegistry)
                 .buildParsed();
      }
      public static SslWorld.ssl_world_packet.Team parseFrom(java.io.InputStream input)
          throws java.io.IOException {
        return newBuilder().mergeFrom(input).buildParsed();
      }
      public static SslWorld.ssl_world_packet.Team parseFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return newBuilder().mergeFrom(input, extensionRegistry)
                 .buildParsed();
      }
      public static SslWorld.ssl_world_packet.Team parseDelimitedFrom(java.io.InputStream input)
          throws java.io.IOException {
        Builder builder = newBuilder();
        if (builder.mergeDelimitedFrom(input)) {
          return builder.buildParsed();
        } else {
          return null;
        }
      }
      public static SslWorld.ssl_world_packet.Team parseDelimitedFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        Builder builder = newBuilder();
        if (builder.mergeDelimitedFrom(input, extensionRegistry)) {
          return builder.buildParsed();
        } else {
          return null;
        }
      }
      public static SslWorld.ssl_world_packet.Team parseFrom(
          com.google.protobuf.CodedInputStream input)
          throws java.io.IOException {
        return newBuilder().mergeFrom(input).buildParsed();
      }
      public static SslWorld.ssl_world_packet.Team parseFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return newBuilder().mergeFrom(input, extensionRegistry)
                 .buildParsed();
      }
      
      public static Builder newBuilder() { return Builder.create(); }
      public Builder newBuilderForType() { return newBuilder(); }
      public static Builder newBuilder(SslWorld.ssl_world_packet.Team prototype) {
        return newBuilder().mergeFrom(prototype);
      }
      public Builder toBuilder() { return newBuilder(this); }
      
      @java.lang.Override
      protected Builder newBuilderForType(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        Builder builder = new Builder(parent);
        return builder;
      }
      public static final class Builder extends
          com.google.protobuf.GeneratedMessage.Builder<Builder>
         implements SslWorld.ssl_world_packet.TeamOrBuilder {
        public static final com.google.protobuf.Descriptors.Descriptor
            getDescriptor() {
          return SslWorld.internal_static_ssl_world_packet_Team_descriptor;
        }
        
        protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
            internalGetFieldAccessorTable() {
          return SslWorld.internal_static_ssl_world_packet_Team_fieldAccessorTable;
        }
        
        // Construct using SslWorld.ssl_world_packet.Team.newBuilder()
        private Builder() {
          maybeForceBuilderInitialization();
        }
        
        private Builder(BuilderParent parent) {
          super(parent);
          maybeForceBuilderInitialization();
        }
        private void maybeForceBuilderInitialization() {
          if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
            getRobotsFieldBuilder();
          }
        }
        private static Builder create() {
          return new Builder();
        }
        
        public Builder clear() {
          super.clear();
          if (robotsBuilder_ == null) {
            robots_ = java.util.Collections.emptyList();
            bitField0_ = (bitField0_ & ~0x00000001);
          } else {
            robotsBuilder_.clear();
          }
          side_ = SslWorld.ssl_world_packet.Side.left;
          bitField0_ = (bitField0_ & ~0x00000002);
          return this;
        }
        
        public Builder clone() {
          return create().mergeFrom(buildPartial());
        }
        
        public com.google.protobuf.Descriptors.Descriptor
            getDescriptorForType() {
          return SslWorld.ssl_world_packet.Team.getDescriptor();
        }
        
        public SslWorld.ssl_world_packet.Team getDefaultInstanceForType() {
          return SslWorld.ssl_world_packet.Team.getDefaultInstance();
        }
        
        public SslWorld.ssl_world_packet.Team build() {
          SslWorld.ssl_world_packet.Team result = buildPartial();
          if (!result.isInitialized()) {
            throw newUninitializedMessageException(result);
          }
          return result;
        }
        
        private SslWorld.ssl_world_packet.Team buildParsed()
            throws com.google.protobuf.InvalidProtocolBufferException {
          SslWorld.ssl_world_packet.Team result = buildPartial();
          if (!result.isInitialized()) {
            throw newUninitializedMessageException(
              result).asInvalidProtocolBufferException();
          }
          return result;
        }
        
        public SslWorld.ssl_world_packet.Team buildPartial() {
          SslWorld.ssl_world_packet.Team result = new SslWorld.ssl_world_packet.Team(this);
          int from_bitField0_ = bitField0_;
          int to_bitField0_ = 0;
          if (robotsBuilder_ == null) {
            if (((bitField0_ & 0x00000001) == 0x00000001)) {
              robots_ = java.util.Collections.unmodifiableList(robots_);
              bitField0_ = (bitField0_ & ~0x00000001);
            }
            result.robots_ = robots_;
          } else {
            result.robots_ = robotsBuilder_.build();
          }
          if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
            to_bitField0_ |= 0x00000001;
          }
          result.side_ = side_;
          result.bitField0_ = to_bitField0_;
          onBuilt();
          return result;
        }
        
        public Builder mergeFrom(com.google.protobuf.Message other) {
          if (other instanceof SslWorld.ssl_world_packet.Team) {
            return mergeFrom((SslWorld.ssl_world_packet.Team)other);
          } else {
            super.mergeFrom(other);
            return this;
          }
        }
        
        public Builder mergeFrom(SslWorld.ssl_world_packet.Team other) {
          if (other == SslWorld.ssl_world_packet.Team.getDefaultInstance()) return this;
          if (robotsBuilder_ == null) {
            if (!other.robots_.isEmpty()) {
              if (robots_.isEmpty()) {
                robots_ = other.robots_;
                bitField0_ = (bitField0_ & ~0x00000001);
              } else {
                ensureRobotsIsMutable();
                robots_.addAll(other.robots_);
              }
              onChanged();
            }
          } else {
            if (!other.robots_.isEmpty()) {
              if (robotsBuilder_.isEmpty()) {
                robotsBuilder_.dispose();
                robotsBuilder_ = null;
                robots_ = other.robots_;
                bitField0_ = (bitField0_ & ~0x00000001);
                robotsBuilder_ = 
                  com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders ?
                     getRobotsFieldBuilder() : null;
              } else {
                robotsBuilder_.addAllMessages(other.robots_);
              }
            }
          }
          if (other.hasSide()) {
            setSide(other.getSide());
          }
          this.mergeUnknownFields(other.getUnknownFields());
          return this;
        }
        
        public final boolean isInitialized() {
          if (!hasSide()) {
            
            return false;
          }
          for (int i = 0; i < getRobotsCount(); i++) {
            if (!getRobots(i).isInitialized()) {
              
              return false;
            }
          }
          return true;
        }
        
        public Builder mergeFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
          com.google.protobuf.UnknownFieldSet.Builder unknownFields =
            com.google.protobuf.UnknownFieldSet.newBuilder(
              this.getUnknownFields());
          while (true) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                this.setUnknownFields(unknownFields.build());
                onChanged();
                return this;
              default: {
                if (!parseUnknownField(input, unknownFields,
                                       extensionRegistry, tag)) {
                  this.setUnknownFields(unknownFields.build());
                  onChanged();
                  return this;
                }
                break;
              }
              case 10: {
                SslWorld.ssl_world_packet.Robot.Builder subBuilder = SslWorld.ssl_world_packet.Robot.newBuilder();
                input.readMessage(subBuilder, extensionRegistry);
                addRobots(subBuilder.buildPartial());
                break;
              }
              case 16: {
                int rawValue = input.readEnum();
                SslWorld.ssl_world_packet.Side value = SslWorld.ssl_world_packet.Side.valueOf(rawValue);
                if (value == null) {
                  unknownFields.mergeVarintField(2, rawValue);
                } else {
                  bitField0_ |= 0x00000002;
                  side_ = value;
                }
                break;
              }
            }
          }
        }
        
        private int bitField0_;
        
        // repeated .ssl_world_packet.Robot robots = 1;
        private java.util.List<SslWorld.ssl_world_packet.Robot> robots_ =
          java.util.Collections.emptyList();
        private void ensureRobotsIsMutable() {
          if (!((bitField0_ & 0x00000001) == 0x00000001)) {
            robots_ = new java.util.ArrayList<SslWorld.ssl_world_packet.Robot>(robots_);
            bitField0_ |= 0x00000001;
           }
        }
        
        private com.google.protobuf.RepeatedFieldBuilder<
            SslWorld.ssl_world_packet.Robot, SslWorld.ssl_world_packet.Robot.Builder, SslWorld.ssl_world_packet.RobotOrBuilder> robotsBuilder_;
        
        public java.util.List<SslWorld.ssl_world_packet.Robot> getRobotsList() {
          if (robotsBuilder_ == null) {
            return java.util.Collections.unmodifiableList(robots_);
          } else {
            return robotsBuilder_.getMessageList();
          }
        }
        public int getRobotsCount() {
          if (robotsBuilder_ == null) {
            return robots_.size();
          } else {
            return robotsBuilder_.getCount();
          }
        }
        public SslWorld.ssl_world_packet.Robot getRobots(int index) {
          if (robotsBuilder_ == null) {
            return robots_.get(index);
          } else {
            return robotsBuilder_.getMessage(index);
          }
        }
        public Builder setRobots(
            int index, SslWorld.ssl_world_packet.Robot value) {
          if (robotsBuilder_ == null) {
            if (value == null) {
              throw new NullPointerException();
            }
            ensureRobotsIsMutable();
            robots_.set(index, value);
            onChanged();
          } else {
            robotsBuilder_.setMessage(index, value);
          }
          return this;
        }
        public Builder setRobots(
            int index, SslWorld.ssl_world_packet.Robot.Builder builderForValue) {
          if (robotsBuilder_ == null) {
            ensureRobotsIsMutable();
            robots_.set(index, builderForValue.build());
            onChanged();
          } else {
            robotsBuilder_.setMessage(index, builderForValue.build());
          }
          return this;
        }
        public Builder addRobots(SslWorld.ssl_world_packet.Robot value) {
          if (robotsBuilder_ == null) {
            if (value == null) {
              throw new NullPointerException();
            }
            ensureRobotsIsMutable();
            robots_.add(value);
            onChanged();
          } else {
            robotsBuilder_.addMessage(value);
          }
          return this;
        }
        public Builder addRobots(
            int index, SslWorld.ssl_world_packet.Robot value) {
          if (robotsBuilder_ == null) {
            if (value == null) {
              throw new NullPointerException();
            }
            ensureRobotsIsMutable();
            robots_.add(index, value);
            onChanged();
          } else {
            robotsBuilder_.addMessage(index, value);
          }
          return this;
        }
        public Builder addRobots(
            SslWorld.ssl_world_packet.Robot.Builder builderForValue) {
          if (robotsBuilder_ == null) {
            ensureRobotsIsMutable();
            robots_.add(builderForValue.build());
            onChanged();
          } else {
            robotsBuilder_.addMessage(builderForValue.build());
          }
          return this;
        }
        public Builder addRobots(
            int index, SslWorld.ssl_world_packet.Robot.Builder builderForValue) {
          if (robotsBuilder_ == null) {
            ensureRobotsIsMutable();
            robots_.add(index, builderForValue.build());
            onChanged();
          } else {
            robotsBuilder_.addMessage(index, builderForValue.build());
          }
          return this;
        }
        public Builder addAllRobots(
            java.lang.Iterable<? extends SslWorld.ssl_world_packet.Robot> values) {
          if (robotsBuilder_ == null) {
            ensureRobotsIsMutable();
            super.addAll(values, robots_);
            onChanged();
          } else {
            robotsBuilder_.addAllMessages(values);
          }
          return this;
        }
        public Builder clearRobots() {
          if (robotsBuilder_ == null) {
            robots_ = java.util.Collections.emptyList();
            bitField0_ = (bitField0_ & ~0x00000001);
            onChanged();
          } else {
            robotsBuilder_.clear();
          }
          return this;
        }
        public Builder removeRobots(int index) {
          if (robotsBuilder_ == null) {
            ensureRobotsIsMutable();
            robots_.remove(index);
            onChanged();
          } else {
            robotsBuilder_.remove(index);
          }
          return this;
        }
        public SslWorld.ssl_world_packet.Robot.Builder getRobotsBuilder(
            int index) {
          return getRobotsFieldBuilder().getBuilder(index);
        }
        public SslWorld.ssl_world_packet.RobotOrBuilder getRobotsOrBuilder(
            int index) {
          if (robotsBuilder_ == null) {
            return robots_.get(index);  } else {
            return robotsBuilder_.getMessageOrBuilder(index);
          }
        }
        public java.util.List<? extends SslWorld.ssl_world_packet.RobotOrBuilder> 
             getRobotsOrBuilderList() {
          if (robotsBuilder_ != null) {
            return robotsBuilder_.getMessageOrBuilderList();
          } else {
            return java.util.Collections.unmodifiableList(robots_);
          }
        }
        public SslWorld.ssl_world_packet.Robot.Builder addRobotsBuilder() {
          return getRobotsFieldBuilder().addBuilder(
              SslWorld.ssl_world_packet.Robot.getDefaultInstance());
        }
        public SslWorld.ssl_world_packet.Robot.Builder addRobotsBuilder(
            int index) {
          return getRobotsFieldBuilder().addBuilder(
              index, SslWorld.ssl_world_packet.Robot.getDefaultInstance());
        }
        public java.util.List<SslWorld.ssl_world_packet.Robot.Builder> 
             getRobotsBuilderList() {
          return getRobotsFieldBuilder().getBuilderList();
        }
        private com.google.protobuf.RepeatedFieldBuilder<
            SslWorld.ssl_world_packet.Robot, SslWorld.ssl_world_packet.Robot.Builder, SslWorld.ssl_world_packet.RobotOrBuilder> 
            getRobotsFieldBuilder() {
          if (robotsBuilder_ == null) {
            robotsBuilder_ = new com.google.protobuf.RepeatedFieldBuilder<
                SslWorld.ssl_world_packet.Robot, SslWorld.ssl_world_packet.Robot.Builder, SslWorld.ssl_world_packet.RobotOrBuilder>(
                    robots_,
                    ((bitField0_ & 0x00000001) == 0x00000001),
                    getParentForChildren(),
                    isClean());
            robots_ = null;
          }
          return robotsBuilder_;
        }
        
        // required .ssl_world_packet.Side side = 2;
        private SslWorld.ssl_world_packet.Side side_ = SslWorld.ssl_world_packet.Side.left;
        public boolean hasSide() {
          return ((bitField0_ & 0x00000002) == 0x00000002);
        }
        public SslWorld.ssl_world_packet.Side getSide() {
          return side_;
        }
        public Builder setSide(SslWorld.ssl_world_packet.Side value) {
          if (value == null) {
            throw new NullPointerException();
          }
          bitField0_ |= 0x00000002;
          side_ = value;
          onChanged();
          return this;
        }
        public Builder clearSide() {
          bitField0_ = (bitField0_ & ~0x00000002);
          side_ = SslWorld.ssl_world_packet.Side.left;
          onChanged();
          return this;
        }
        
        // @@protoc_insertion_point(builder_scope:ssl_world_packet.Team)
      }
      
      static {
        defaultInstance = new Team(true);
        defaultInstance.initFields();
      }
      
      // @@protoc_insertion_point(class_scope:ssl_world_packet.Team)
    }
    
    private int bitField0_;
    // repeated .ssl_world_packet.Ball field_balls = 1;
    public static final int FIELD_BALLS_FIELD_NUMBER = 1;
    private java.util.List<SslWorld.ssl_world_packet.Ball> fieldBalls_;
    public java.util.List<SslWorld.ssl_world_packet.Ball> getFieldBallsList() {
      return fieldBalls_;
    }
    public java.util.List<? extends SslWorld.ssl_world_packet.BallOrBuilder> 
        getFieldBallsOrBuilderList() {
      return fieldBalls_;
    }
    public int getFieldBallsCount() {
      return fieldBalls_.size();
    }
    public SslWorld.ssl_world_packet.Ball getFieldBalls(int index) {
      return fieldBalls_.get(index);
    }
    public SslWorld.ssl_world_packet.BallOrBuilder getFieldBallsOrBuilder(
        int index) {
      return fieldBalls_.get(index);
    }
    
    // required .ssl_world_packet.Team blue_team = 2;
    public static final int BLUE_TEAM_FIELD_NUMBER = 2;
    private SslWorld.ssl_world_packet.Team blueTeam_;
    public boolean hasBlueTeam() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    public SslWorld.ssl_world_packet.Team getBlueTeam() {
      return blueTeam_;
    }
    public SslWorld.ssl_world_packet.TeamOrBuilder getBlueTeamOrBuilder() {
      return blueTeam_;
    }
    
    // required .ssl_world_packet.Team yellow_team = 3;
    public static final int YELLOW_TEAM_FIELD_NUMBER = 3;
    private SslWorld.ssl_world_packet.Team yellowTeam_;
    public boolean hasYellowTeam() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    public SslWorld.ssl_world_packet.Team getYellowTeam() {
      return yellowTeam_;
    }
    public SslWorld.ssl_world_packet.TeamOrBuilder getYellowTeamOrBuilder() {
      return yellowTeam_;
    }
    
    // required string referee_state = 4;
    public static final int REFEREE_STATE_FIELD_NUMBER = 4;
    private java.lang.Object refereeState_;
    public boolean hasRefereeState() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    public String getRefereeState() {
      java.lang.Object ref = refereeState_;
      if (ref instanceof String) {
        return (String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        String s = bs.toStringUtf8();
        if (com.google.protobuf.Internal.isValidUtf8(bs)) {
          refereeState_ = s;
        }
        return s;
      }
    }
    private com.google.protobuf.ByteString getRefereeStateBytes() {
      java.lang.Object ref = refereeState_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8((String) ref);
        refereeState_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }
    
    // optional string comment = 5;
    public static final int COMMENT_FIELD_NUMBER = 5;
    private java.lang.Object comment_;
    public boolean hasComment() {
      return ((bitField0_ & 0x00000008) == 0x00000008);
    }
    public String getComment() {
      java.lang.Object ref = comment_;
      if (ref instanceof String) {
        return (String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        String s = bs.toStringUtf8();
        if (com.google.protobuf.Internal.isValidUtf8(bs)) {
          comment_ = s;
        }
        return s;
      }
    }
    private com.google.protobuf.ByteString getCommentBytes() {
      java.lang.Object ref = comment_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8((String) ref);
        comment_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }
    
    private void initFields() {
      fieldBalls_ = java.util.Collections.emptyList();
      blueTeam_ = SslWorld.ssl_world_packet.Team.getDefaultInstance();
      yellowTeam_ = SslWorld.ssl_world_packet.Team.getDefaultInstance();
      refereeState_ = "";
      comment_ = "";
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;
      
      if (!hasBlueTeam()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasYellowTeam()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasRefereeState()) {
        memoizedIsInitialized = 0;
        return false;
      }
      for (int i = 0; i < getFieldBallsCount(); i++) {
        if (!getFieldBalls(i).isInitialized()) {
          memoizedIsInitialized = 0;
          return false;
        }
      }
      if (!getBlueTeam().isInitialized()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!getYellowTeam().isInitialized()) {
        memoizedIsInitialized = 0;
        return false;
      }
      memoizedIsInitialized = 1;
      return true;
    }
    
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      for (int i = 0; i < fieldBalls_.size(); i++) {
        output.writeMessage(1, fieldBalls_.get(i));
      }
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeMessage(2, blueTeam_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeMessage(3, yellowTeam_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeBytes(4, getRefereeStateBytes());
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        output.writeBytes(5, getCommentBytes());
      }
      getUnknownFields().writeTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
    
      size = 0;
      for (int i = 0; i < fieldBalls_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, fieldBalls_.get(i));
      }
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(2, blueTeam_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(3, yellowTeam_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(4, getRefereeStateBytes());
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(5, getCommentBytes());
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }
    
    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }
    
    public static SslWorld.ssl_world_packet parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static SslWorld.ssl_world_packet parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static SslWorld.ssl_world_packet parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static SslWorld.ssl_world_packet parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static SslWorld.ssl_world_packet parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static SslWorld.ssl_world_packet parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    public static SslWorld.ssl_world_packet parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static SslWorld.ssl_world_packet parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input, extensionRegistry)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static SslWorld.ssl_world_packet parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static SslWorld.ssl_world_packet parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    
    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(SslWorld.ssl_world_packet prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }
    
    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements SslWorld.ssl_world_packetOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return SslWorld.internal_static_ssl_world_packet_descriptor;
      }
      
      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return SslWorld.internal_static_ssl_world_packet_fieldAccessorTable;
      }
      
      // Construct using SslWorld.ssl_world_packet.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }
      
      private Builder(BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
          getFieldBallsFieldBuilder();
          getBlueTeamFieldBuilder();
          getYellowTeamFieldBuilder();
        }
      }
      private static Builder create() {
        return new Builder();
      }
      
      public Builder clear() {
        super.clear();
        if (fieldBallsBuilder_ == null) {
          fieldBalls_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000001);
        } else {
          fieldBallsBuilder_.clear();
        }
        if (blueTeamBuilder_ == null) {
          blueTeam_ = SslWorld.ssl_world_packet.Team.getDefaultInstance();
        } else {
          blueTeamBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000002);
        if (yellowTeamBuilder_ == null) {
          yellowTeam_ = SslWorld.ssl_world_packet.Team.getDefaultInstance();
        } else {
          yellowTeamBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000004);
        refereeState_ = "";
        bitField0_ = (bitField0_ & ~0x00000008);
        comment_ = "";
        bitField0_ = (bitField0_ & ~0x00000010);
        return this;
      }
      
      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }
      
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return SslWorld.ssl_world_packet.getDescriptor();
      }
      
      public SslWorld.ssl_world_packet getDefaultInstanceForType() {
        return SslWorld.ssl_world_packet.getDefaultInstance();
      }
      
      public SslWorld.ssl_world_packet build() {
        SslWorld.ssl_world_packet result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }
      
      private SslWorld.ssl_world_packet buildParsed()
          throws com.google.protobuf.InvalidProtocolBufferException {
        SslWorld.ssl_world_packet result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(
            result).asInvalidProtocolBufferException();
        }
        return result;
      }
      
      public SslWorld.ssl_world_packet buildPartial() {
        SslWorld.ssl_world_packet result = new SslWorld.ssl_world_packet(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (fieldBallsBuilder_ == null) {
          if (((bitField0_ & 0x00000001) == 0x00000001)) {
            fieldBalls_ = java.util.Collections.unmodifiableList(fieldBalls_);
            bitField0_ = (bitField0_ & ~0x00000001);
          }
          result.fieldBalls_ = fieldBalls_;
        } else {
          result.fieldBalls_ = fieldBallsBuilder_.build();
        }
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000001;
        }
        if (blueTeamBuilder_ == null) {
          result.blueTeam_ = blueTeam_;
        } else {
          result.blueTeam_ = blueTeamBuilder_.build();
        }
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000002;
        }
        if (yellowTeamBuilder_ == null) {
          result.yellowTeam_ = yellowTeam_;
        } else {
          result.yellowTeam_ = yellowTeamBuilder_.build();
        }
        if (((from_bitField0_ & 0x00000008) == 0x00000008)) {
          to_bitField0_ |= 0x00000004;
        }
        result.refereeState_ = refereeState_;
        if (((from_bitField0_ & 0x00000010) == 0x00000010)) {
          to_bitField0_ |= 0x00000008;
        }
        result.comment_ = comment_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }
      
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof SslWorld.ssl_world_packet) {
          return mergeFrom((SslWorld.ssl_world_packet)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }
      
      public Builder mergeFrom(SslWorld.ssl_world_packet other) {
        if (other == SslWorld.ssl_world_packet.getDefaultInstance()) return this;
        if (fieldBallsBuilder_ == null) {
          if (!other.fieldBalls_.isEmpty()) {
            if (fieldBalls_.isEmpty()) {
              fieldBalls_ = other.fieldBalls_;
              bitField0_ = (bitField0_ & ~0x00000001);
            } else {
              ensureFieldBallsIsMutable();
              fieldBalls_.addAll(other.fieldBalls_);
            }
            onChanged();
          }
        } else {
          if (!other.fieldBalls_.isEmpty()) {
            if (fieldBallsBuilder_.isEmpty()) {
              fieldBallsBuilder_.dispose();
              fieldBallsBuilder_ = null;
              fieldBalls_ = other.fieldBalls_;
              bitField0_ = (bitField0_ & ~0x00000001);
              fieldBallsBuilder_ = 
                com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders ?
                   getFieldBallsFieldBuilder() : null;
            } else {
              fieldBallsBuilder_.addAllMessages(other.fieldBalls_);
            }
          }
        }
        if (other.hasBlueTeam()) {
          mergeBlueTeam(other.getBlueTeam());
        }
        if (other.hasYellowTeam()) {
          mergeYellowTeam(other.getYellowTeam());
        }
        if (other.hasRefereeState()) {
          setRefereeState(other.getRefereeState());
        }
        if (other.hasComment()) {
          setComment(other.getComment());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }
      
      public final boolean isInitialized() {
        if (!hasBlueTeam()) {
          
          return false;
        }
        if (!hasYellowTeam()) {
          
          return false;
        }
        if (!hasRefereeState()) {
          
          return false;
        }
        for (int i = 0; i < getFieldBallsCount(); i++) {
          if (!getFieldBalls(i).isInitialized()) {
            
            return false;
          }
        }
        if (!getBlueTeam().isInitialized()) {
          
          return false;
        }
        if (!getYellowTeam().isInitialized()) {
          
          return false;
        }
        return true;
      }
      
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder(
            this.getUnknownFields());
        while (true) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              this.setUnknownFields(unknownFields.build());
              onChanged();
              return this;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                this.setUnknownFields(unknownFields.build());
                onChanged();
                return this;
              }
              break;
            }
            case 10: {
              SslWorld.ssl_world_packet.Ball.Builder subBuilder = SslWorld.ssl_world_packet.Ball.newBuilder();
              input.readMessage(subBuilder, extensionRegistry);
              addFieldBalls(subBuilder.buildPartial());
              break;
            }
            case 18: {
              SslWorld.ssl_world_packet.Team.Builder subBuilder = SslWorld.ssl_world_packet.Team.newBuilder();
              if (hasBlueTeam()) {
                subBuilder.mergeFrom(getBlueTeam());
              }
              input.readMessage(subBuilder, extensionRegistry);
              setBlueTeam(subBuilder.buildPartial());
              break;
            }
            case 26: {
              SslWorld.ssl_world_packet.Team.Builder subBuilder = SslWorld.ssl_world_packet.Team.newBuilder();
              if (hasYellowTeam()) {
                subBuilder.mergeFrom(getYellowTeam());
              }
              input.readMessage(subBuilder, extensionRegistry);
              setYellowTeam(subBuilder.buildPartial());
              break;
            }
            case 34: {
              bitField0_ |= 0x00000008;
              refereeState_ = input.readBytes();
              break;
            }
            case 42: {
              bitField0_ |= 0x00000010;
              comment_ = input.readBytes();
              break;
            }
          }
        }
      }
      
      private int bitField0_;
      
      // repeated .ssl_world_packet.Ball field_balls = 1;
      private java.util.List<SslWorld.ssl_world_packet.Ball> fieldBalls_ =
        java.util.Collections.emptyList();
      private void ensureFieldBallsIsMutable() {
        if (!((bitField0_ & 0x00000001) == 0x00000001)) {
          fieldBalls_ = new java.util.ArrayList<SslWorld.ssl_world_packet.Ball>(fieldBalls_);
          bitField0_ |= 0x00000001;
         }
      }
      
      private com.google.protobuf.RepeatedFieldBuilder<
          SslWorld.ssl_world_packet.Ball, SslWorld.ssl_world_packet.Ball.Builder, SslWorld.ssl_world_packet.BallOrBuilder> fieldBallsBuilder_;
      
      public java.util.List<SslWorld.ssl_world_packet.Ball> getFieldBallsList() {
        if (fieldBallsBuilder_ == null) {
          return java.util.Collections.unmodifiableList(fieldBalls_);
        } else {
          return fieldBallsBuilder_.getMessageList();
        }
      }
      public int getFieldBallsCount() {
        if (fieldBallsBuilder_ == null) {
          return fieldBalls_.size();
        } else {
          return fieldBallsBuilder_.getCount();
        }
      }
      public SslWorld.ssl_world_packet.Ball getFieldBalls(int index) {
        if (fieldBallsBuilder_ == null) {
          return fieldBalls_.get(index);
        } else {
          return fieldBallsBuilder_.getMessage(index);
        }
      }
      public Builder setFieldBalls(
          int index, SslWorld.ssl_world_packet.Ball value) {
        if (fieldBallsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureFieldBallsIsMutable();
          fieldBalls_.set(index, value);
          onChanged();
        } else {
          fieldBallsBuilder_.setMessage(index, value);
        }
        return this;
      }
      public Builder setFieldBalls(
          int index, SslWorld.ssl_world_packet.Ball.Builder builderForValue) {
        if (fieldBallsBuilder_ == null) {
          ensureFieldBallsIsMutable();
          fieldBalls_.set(index, builderForValue.build());
          onChanged();
        } else {
          fieldBallsBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      public Builder addFieldBalls(SslWorld.ssl_world_packet.Ball value) {
        if (fieldBallsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureFieldBallsIsMutable();
          fieldBalls_.add(value);
          onChanged();
        } else {
          fieldBallsBuilder_.addMessage(value);
        }
        return this;
      }
      public Builder addFieldBalls(
          int index, SslWorld.ssl_world_packet.Ball value) {
        if (fieldBallsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureFieldBallsIsMutable();
          fieldBalls_.add(index, value);
          onChanged();
        } else {
          fieldBallsBuilder_.addMessage(index, value);
        }
        return this;
      }
      public Builder addFieldBalls(
          SslWorld.ssl_world_packet.Ball.Builder builderForValue) {
        if (fieldBallsBuilder_ == null) {
          ensureFieldBallsIsMutable();
          fieldBalls_.add(builderForValue.build());
          onChanged();
        } else {
          fieldBallsBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      public Builder addFieldBalls(
          int index, SslWorld.ssl_world_packet.Ball.Builder builderForValue) {
        if (fieldBallsBuilder_ == null) {
          ensureFieldBallsIsMutable();
          fieldBalls_.add(index, builderForValue.build());
          onChanged();
        } else {
          fieldBallsBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      public Builder addAllFieldBalls(
          java.lang.Iterable<? extends SslWorld.ssl_world_packet.Ball> values) {
        if (fieldBallsBuilder_ == null) {
          ensureFieldBallsIsMutable();
          super.addAll(values, fieldBalls_);
          onChanged();
        } else {
          fieldBallsBuilder_.addAllMessages(values);
        }
        return this;
      }
      public Builder clearFieldBalls() {
        if (fieldBallsBuilder_ == null) {
          fieldBalls_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000001);
          onChanged();
        } else {
          fieldBallsBuilder_.clear();
        }
        return this;
      }
      public Builder removeFieldBalls(int index) {
        if (fieldBallsBuilder_ == null) {
          ensureFieldBallsIsMutable();
          fieldBalls_.remove(index);
          onChanged();
        } else {
          fieldBallsBuilder_.remove(index);
        }
        return this;
      }
      public SslWorld.ssl_world_packet.Ball.Builder getFieldBallsBuilder(
          int index) {
        return getFieldBallsFieldBuilder().getBuilder(index);
      }
      public SslWorld.ssl_world_packet.BallOrBuilder getFieldBallsOrBuilder(
          int index) {
        if (fieldBallsBuilder_ == null) {
          return fieldBalls_.get(index);  } else {
          return fieldBallsBuilder_.getMessageOrBuilder(index);
        }
      }
      public java.util.List<? extends SslWorld.ssl_world_packet.BallOrBuilder> 
           getFieldBallsOrBuilderList() {
        if (fieldBallsBuilder_ != null) {
          return fieldBallsBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(fieldBalls_);
        }
      }
      public SslWorld.ssl_world_packet.Ball.Builder addFieldBallsBuilder() {
        return getFieldBallsFieldBuilder().addBuilder(
            SslWorld.ssl_world_packet.Ball.getDefaultInstance());
      }
      public SslWorld.ssl_world_packet.Ball.Builder addFieldBallsBuilder(
          int index) {
        return getFieldBallsFieldBuilder().addBuilder(
            index, SslWorld.ssl_world_packet.Ball.getDefaultInstance());
      }
      public java.util.List<SslWorld.ssl_world_packet.Ball.Builder> 
           getFieldBallsBuilderList() {
        return getFieldBallsFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilder<
          SslWorld.ssl_world_packet.Ball, SslWorld.ssl_world_packet.Ball.Builder, SslWorld.ssl_world_packet.BallOrBuilder> 
          getFieldBallsFieldBuilder() {
        if (fieldBallsBuilder_ == null) {
          fieldBallsBuilder_ = new com.google.protobuf.RepeatedFieldBuilder<
              SslWorld.ssl_world_packet.Ball, SslWorld.ssl_world_packet.Ball.Builder, SslWorld.ssl_world_packet.BallOrBuilder>(
                  fieldBalls_,
                  ((bitField0_ & 0x00000001) == 0x00000001),
                  getParentForChildren(),
                  isClean());
          fieldBalls_ = null;
        }
        return fieldBallsBuilder_;
      }
      
      // required .ssl_world_packet.Team blue_team = 2;
      private SslWorld.ssl_world_packet.Team blueTeam_ = SslWorld.ssl_world_packet.Team.getDefaultInstance();
      private com.google.protobuf.SingleFieldBuilder<
          SslWorld.ssl_world_packet.Team, SslWorld.ssl_world_packet.Team.Builder, SslWorld.ssl_world_packet.TeamOrBuilder> blueTeamBuilder_;
      public boolean hasBlueTeam() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      public SslWorld.ssl_world_packet.Team getBlueTeam() {
        if (blueTeamBuilder_ == null) {
          return blueTeam_;
        } else {
          return blueTeamBuilder_.getMessage();
        }
      }
      public Builder setBlueTeam(SslWorld.ssl_world_packet.Team value) {
        if (blueTeamBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          blueTeam_ = value;
          onChanged();
        } else {
          blueTeamBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000002;
        return this;
      }
      public Builder setBlueTeam(
          SslWorld.ssl_world_packet.Team.Builder builderForValue) {
        if (blueTeamBuilder_ == null) {
          blueTeam_ = builderForValue.build();
          onChanged();
        } else {
          blueTeamBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000002;
        return this;
      }
      public Builder mergeBlueTeam(SslWorld.ssl_world_packet.Team value) {
        if (blueTeamBuilder_ == null) {
          if (((bitField0_ & 0x00000002) == 0x00000002) &&
              blueTeam_ != SslWorld.ssl_world_packet.Team.getDefaultInstance()) {
            blueTeam_ =
              SslWorld.ssl_world_packet.Team.newBuilder(blueTeam_).mergeFrom(value).buildPartial();
          } else {
            blueTeam_ = value;
          }
          onChanged();
        } else {
          blueTeamBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00000002;
        return this;
      }
      public Builder clearBlueTeam() {
        if (blueTeamBuilder_ == null) {
          blueTeam_ = SslWorld.ssl_world_packet.Team.getDefaultInstance();
          onChanged();
        } else {
          blueTeamBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000002);
        return this;
      }
      public SslWorld.ssl_world_packet.Team.Builder getBlueTeamBuilder() {
        bitField0_ |= 0x00000002;
        onChanged();
        return getBlueTeamFieldBuilder().getBuilder();
      }
      public SslWorld.ssl_world_packet.TeamOrBuilder getBlueTeamOrBuilder() {
        if (blueTeamBuilder_ != null) {
          return blueTeamBuilder_.getMessageOrBuilder();
        } else {
          return blueTeam_;
        }
      }
      private com.google.protobuf.SingleFieldBuilder<
          SslWorld.ssl_world_packet.Team, SslWorld.ssl_world_packet.Team.Builder, SslWorld.ssl_world_packet.TeamOrBuilder> 
          getBlueTeamFieldBuilder() {
        if (blueTeamBuilder_ == null) {
          blueTeamBuilder_ = new com.google.protobuf.SingleFieldBuilder<
              SslWorld.ssl_world_packet.Team, SslWorld.ssl_world_packet.Team.Builder, SslWorld.ssl_world_packet.TeamOrBuilder>(
                  blueTeam_,
                  getParentForChildren(),
                  isClean());
          blueTeam_ = null;
        }
        return blueTeamBuilder_;
      }
      
      // required .ssl_world_packet.Team yellow_team = 3;
      private SslWorld.ssl_world_packet.Team yellowTeam_ = SslWorld.ssl_world_packet.Team.getDefaultInstance();
      private com.google.protobuf.SingleFieldBuilder<
          SslWorld.ssl_world_packet.Team, SslWorld.ssl_world_packet.Team.Builder, SslWorld.ssl_world_packet.TeamOrBuilder> yellowTeamBuilder_;
      public boolean hasYellowTeam() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      public SslWorld.ssl_world_packet.Team getYellowTeam() {
        if (yellowTeamBuilder_ == null) {
          return yellowTeam_;
        } else {
          return yellowTeamBuilder_.getMessage();
        }
      }
      public Builder setYellowTeam(SslWorld.ssl_world_packet.Team value) {
        if (yellowTeamBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          yellowTeam_ = value;
          onChanged();
        } else {
          yellowTeamBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000004;
        return this;
      }
      public Builder setYellowTeam(
          SslWorld.ssl_world_packet.Team.Builder builderForValue) {
        if (yellowTeamBuilder_ == null) {
          yellowTeam_ = builderForValue.build();
          onChanged();
        } else {
          yellowTeamBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000004;
        return this;
      }
      public Builder mergeYellowTeam(SslWorld.ssl_world_packet.Team value) {
        if (yellowTeamBuilder_ == null) {
          if (((bitField0_ & 0x00000004) == 0x00000004) &&
              yellowTeam_ != SslWorld.ssl_world_packet.Team.getDefaultInstance()) {
            yellowTeam_ =
              SslWorld.ssl_world_packet.Team.newBuilder(yellowTeam_).mergeFrom(value).buildPartial();
          } else {
            yellowTeam_ = value;
          }
          onChanged();
        } else {
          yellowTeamBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00000004;
        return this;
      }
      public Builder clearYellowTeam() {
        if (yellowTeamBuilder_ == null) {
          yellowTeam_ = SslWorld.ssl_world_packet.Team.getDefaultInstance();
          onChanged();
        } else {
          yellowTeamBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000004);
        return this;
      }
      public SslWorld.ssl_world_packet.Team.Builder getYellowTeamBuilder() {
        bitField0_ |= 0x00000004;
        onChanged();
        return getYellowTeamFieldBuilder().getBuilder();
      }
      public SslWorld.ssl_world_packet.TeamOrBuilder getYellowTeamOrBuilder() {
        if (yellowTeamBuilder_ != null) {
          return yellowTeamBuilder_.getMessageOrBuilder();
        } else {
          return yellowTeam_;
        }
      }
      private com.google.protobuf.SingleFieldBuilder<
          SslWorld.ssl_world_packet.Team, SslWorld.ssl_world_packet.Team.Builder, SslWorld.ssl_world_packet.TeamOrBuilder> 
          getYellowTeamFieldBuilder() {
        if (yellowTeamBuilder_ == null) {
          yellowTeamBuilder_ = new com.google.protobuf.SingleFieldBuilder<
              SslWorld.ssl_world_packet.Team, SslWorld.ssl_world_packet.Team.Builder, SslWorld.ssl_world_packet.TeamOrBuilder>(
                  yellowTeam_,
                  getParentForChildren(),
                  isClean());
          yellowTeam_ = null;
        }
        return yellowTeamBuilder_;
      }
      
      // required string referee_state = 4;
      private java.lang.Object refereeState_ = "";
      public boolean hasRefereeState() {
        return ((bitField0_ & 0x00000008) == 0x00000008);
      }
      public String getRefereeState() {
        java.lang.Object ref = refereeState_;
        if (!(ref instanceof String)) {
          String s = ((com.google.protobuf.ByteString) ref).toStringUtf8();
          refereeState_ = s;
          return s;
        } else {
          return (String) ref;
        }
      }
      public Builder setRefereeState(String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000008;
        refereeState_ = value;
        onChanged();
        return this;
      }
      public Builder clearRefereeState() {
        bitField0_ = (bitField0_ & ~0x00000008);
        refereeState_ = getDefaultInstance().getRefereeState();
        onChanged();
        return this;
      }
      void setRefereeState(com.google.protobuf.ByteString value) {
        bitField0_ |= 0x00000008;
        refereeState_ = value;
        onChanged();
      }
      
      // optional string comment = 5;
      private java.lang.Object comment_ = "";
      public boolean hasComment() {
        return ((bitField0_ & 0x00000010) == 0x00000010);
      }
      public String getComment() {
        java.lang.Object ref = comment_;
        if (!(ref instanceof String)) {
          String s = ((com.google.protobuf.ByteString) ref).toStringUtf8();
          comment_ = s;
          return s;
        } else {
          return (String) ref;
        }
      }
      public Builder setComment(String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000010;
        comment_ = value;
        onChanged();
        return this;
      }
      public Builder clearComment() {
        bitField0_ = (bitField0_ & ~0x00000010);
        comment_ = getDefaultInstance().getComment();
        onChanged();
        return this;
      }
      void setComment(com.google.protobuf.ByteString value) {
        bitField0_ |= 0x00000010;
        comment_ = value;
        onChanged();
      }
      
      // @@protoc_insertion_point(builder_scope:ssl_world_packet)
    }
    
    static {
      defaultInstance = new ssl_world_packet(true);
      defaultInstance.initFields();
    }
    
    // @@protoc_insertion_point(class_scope:ssl_world_packet)
  }
  
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_ssl_world_packet_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_ssl_world_packet_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_ssl_world_packet_vector_3d_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_ssl_world_packet_vector_3d_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_ssl_world_packet_Ball_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_ssl_world_packet_Ball_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_ssl_world_packet_Robot_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_ssl_world_packet_Robot_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_ssl_world_packet_Team_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_ssl_world_packet_Team_fieldAccessorTable;
  
  public static com.google.protobuf.Descriptors.FileDescriptor
      getDescriptor() {
    return descriptor;
  }
  private static com.google.protobuf.Descriptors.FileDescriptor
      descriptor;
  static {
    java.lang.String[] descriptorData = {
      "\n\017ssl_world.proto\"\271\005\n\020ssl_world_packet\022+" +
      "\n\013field_balls\030\001 \003(\0132\026.ssl_world_packet.B" +
      "all\022)\n\tblue_team\030\002 \002(\0132\026.ssl_world_packe" +
      "t.Team\022+\n\013yellow_team\030\003 \002(\0132\026.ssl_world_" +
      "packet.Team\022\025\n\rreferee_state\030\004 \002(\t\022\017\n\007co" +
      "mment\030\005 \001(\t\032/\n\tvector_3d\022\t\n\001x\030\001 \002(\002\022\t\n\001y" +
      "\030\002 \002(\002\022\014\n\004teta\030\003 \002(\002\032\326\001\n\004Ball\022\n\n\002id\030\001 \002(" +
      "\r\022-\n\010position\030\002 \002(\0132\033.ssl_world_packet.v" +
      "ector_3d\022-\n\010velocity\030\003 \002(\0132\033.ssl_world_p" +
      "acket.vector_3d\0221\n\014displacement\030\004 \001(\0132\033.",
      "ssl_world_packet.vector_3d\0221\n\014velocity_r" +
      "aw\030\005 \001(\0132\033.ssl_world_packet.vector_3d\032q\n" +
      "\005Robot\022\n\n\002id\030\001 \002(\r\022-\n\010position\030\002 \002(\0132\033.s" +
      "sl_world_packet.vector_3d\022-\n\010velocity\030\003 " +
      "\002(\0132\033.ssl_world_packet.vector_3d\032U\n\004Team" +
      "\022\'\n\006robots\030\001 \003(\0132\027.ssl_world_packet.Robo" +
      "t\022$\n\004side\030\002 \002(\0162\026.ssl_world_packet.Side\"" +
      "$\n\004Side\022\021\n\004left\020\377\377\377\377\377\377\377\377\377\001\022\t\n\005right\020\001"
    };
    com.google.protobuf.Descriptors.FileDescriptor.InternalDescriptorAssigner assigner =
      new com.google.protobuf.Descriptors.FileDescriptor.InternalDescriptorAssigner() {
        public com.google.protobuf.ExtensionRegistry assignDescriptors(
            com.google.protobuf.Descriptors.FileDescriptor root) {
          descriptor = root;
          internal_static_ssl_world_packet_descriptor =
            getDescriptor().getMessageTypes().get(0);
          internal_static_ssl_world_packet_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_ssl_world_packet_descriptor,
              new java.lang.String[] { "FieldBalls", "BlueTeam", "YellowTeam", "RefereeState", "Comment", },
              SslWorld.ssl_world_packet.class,
              SslWorld.ssl_world_packet.Builder.class);
          internal_static_ssl_world_packet_vector_3d_descriptor =
            internal_static_ssl_world_packet_descriptor.getNestedTypes().get(0);
          internal_static_ssl_world_packet_vector_3d_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_ssl_world_packet_vector_3d_descriptor,
              new java.lang.String[] { "X", "Y", "Teta", },
              SslWorld.ssl_world_packet.vector_3d.class,
              SslWorld.ssl_world_packet.vector_3d.Builder.class);
          internal_static_ssl_world_packet_Ball_descriptor =
            internal_static_ssl_world_packet_descriptor.getNestedTypes().get(1);
          internal_static_ssl_world_packet_Ball_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_ssl_world_packet_Ball_descriptor,
              new java.lang.String[] { "Id", "Position", "Velocity", "Displacement", "VelocityRaw", },
              SslWorld.ssl_world_packet.Ball.class,
              SslWorld.ssl_world_packet.Ball.Builder.class);
          internal_static_ssl_world_packet_Robot_descriptor =
            internal_static_ssl_world_packet_descriptor.getNestedTypes().get(2);
          internal_static_ssl_world_packet_Robot_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_ssl_world_packet_Robot_descriptor,
              new java.lang.String[] { "Id", "Position", "Velocity", },
              SslWorld.ssl_world_packet.Robot.class,
              SslWorld.ssl_world_packet.Robot.Builder.class);
          internal_static_ssl_world_packet_Team_descriptor =
            internal_static_ssl_world_packet_descriptor.getNestedTypes().get(3);
          internal_static_ssl_world_packet_Team_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_ssl_world_packet_Team_descriptor,
              new java.lang.String[] { "Robots", "Side", },
              SslWorld.ssl_world_packet.Team.class,
              SslWorld.ssl_world_packet.Team.Builder.class);
          return null;
        }
      };
    com.google.protobuf.Descriptors.FileDescriptor
      .internalBuildGeneratedFileFrom(descriptorData,
        new com.google.protobuf.Descriptors.FileDescriptor[] {
        }, assigner);
  }
  
  // @@protoc_insertion_point(outer_class_scope)
}
